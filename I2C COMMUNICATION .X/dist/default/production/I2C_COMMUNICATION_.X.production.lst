

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 28 14:17:01 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     018C                     	;# 
   119     018D                     	;# 
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     0008                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     000E                     	;# 
   135     000E                     	;# 
   136     000F                     	;# 
   137     0010                     	;# 
   138     0011                     	;# 
   139     0012                     	;# 
   140     0013                     	;# 
   141     0014                     	;# 
   142     0015                     	;# 
   143     0015                     	;# 
   144     0016                     	;# 
   145     0017                     	;# 
   146     0018                     	;# 
   147     0019                     	;# 
   148     001A                     	;# 
   149     001B                     	;# 
   150     001B                     	;# 
   151     001C                     	;# 
   152     001D                     	;# 
   153     001E                     	;# 
   154     001F                     	;# 
   155     0081                     	;# 
   156     0085                     	;# 
   157     0086                     	;# 
   158     0087                     	;# 
   159     0088                     	;# 
   160     0089                     	;# 
   161     008C                     	;# 
   162     008D                     	;# 
   163     008E                     	;# 
   164     0091                     	;# 
   165     0092                     	;# 
   166     0093                     	;# 
   167     0094                     	;# 
   168     0098                     	;# 
   169     0099                     	;# 
   170     009C                     	;# 
   171     009D                     	;# 
   172     009E                     	;# 
   173     009F                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     010F                     	;# 
   178     018C                     	;# 
   179     018D                     	;# 
   180     0013                     _SSPBUF	set	19
   181     000C                     _PIR1bits	set	12
   182     0006                     _PORTB	set	6
   183     0014                     _SSPCON	set	20
   184     0006                     _PORTBbits	set	6
   185     0008                     _PORTD	set	8
   186     0094                     _SSPSTATbits	set	148
   187     0091                     _SSPCON2bits	set	145
   188     0086                     _TRISB	set	134
   189     0088                     _TRISD	set	136
   190     0093                     _SSPADD	set	147
   191     0087                     _TRISC	set	135
   192                           
   193                           	psect	strings
   194     0003                     __pstrings:
   195     0003                     stringtab:
   196     0003                     __stringtab:
   197     0003                     stringcode:	
   198                           ;	String table - string pointers are 1 byte each
   199                           
   200     0003                     stringdir:
   201     0003  3000               	movlw	high stringdir
   202     0004  008A               	movwf	10
   203     0005  0804               	movf	4,w
   204     0006  0A84               	incf	4,f
   205     0007  0782               	addwf	2,f
   206     0008                     __stringbase:
   207     0008  3400               	retlw	0
   208     0009                     __end_of__stringtab:
   209     0009                     STR_1:
   210     0009  3443               	retlw	67	;'C'
   211     000A  344C               	retlw	76	;'L'
   212     000B  344F               	retlw	79	;'O'
   213     000C  3443               	retlw	67	;'C'
   214     000D  344B               	retlw	75	;'K'
   215     000E  343A               	retlw	58	;':'
   216     000F  3400               	retlw	0
   217     0010                     STR_2:
   218     0010  3444               	retlw	68	;'D'
   219     0011  3441               	retlw	65	;'A'
   220     0012  3454               	retlw	84	;'T'
   221     0013  3445               	retlw	69	;'E'
   222     0014  343A               	retlw	58	;':'
   223     0015  3400               	retlw	0
   224                           
   225                           	psect	cinit
   226     07F2                     start_initialization:	
   227                           ; #config settings
   228                           
   229     07F2                     __initialization:
   230                           
   231                           ; Clear objects allocated to COMMON
   232     07F2  01FC               	clrf	__pbssCOMMON& (0+127)
   233     07F3  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   234                           
   235                           ; Clear objects allocated to BANK0
   236     07F4  1283               	bcf	3,5	;RP0=0, select bank0
   237     07F5  1303               	bcf	3,6	;RP1=0, select bank0
   238     07F6  01AD               	clrf	__pbssBANK0& (0+127)
   239     07F7  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   240     07F8  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   241     07F9  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   242     07FA  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   243     07FB  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   244     07FC                     end_of_initialization:	
   245                           ;End of C runtime variable initialization code
   246                           
   247     07FC                     __end_of__initialization:
   248     07FC  0183               	clrf	3
   249     07FD  120A  118A  2DB1   	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMMON
   252     007C                     __pbssCOMMON:
   253     007C                     ___min:
   254     007C                     	ds	1
   255     007D                     ___sec:
   256     007D                     	ds	1
   257                           
   258                           	psect	bssBANK0
   259     002D                     __pbssBANK0:
   260     002D                     ___con:
   261     002D                     	ds	1
   262     002E                     ___yr:
   263     002E                     	ds	1
   264     002F                     ___month:
   265     002F                     	ds	1
   266     0030                     ___date:
   267     0030                     	ds	1
   268     0031                     ___day:
   269     0031                     	ds	1
   270     0032                     ___hr:
   271     0032                     	ds	1
   272                           
   273                           	psect	cstackCOMMON
   274     0070                     __pcstackCOMMON:
   275     0070                     ?_lcd_command:
   276     0070                     ??_lcd_command:	
   277                           ; 1 bytes @ 0x0
   278                           
   279     0070                     ?_lcd_data:	
   280                           ; 1 bytes @ 0x0
   281                           
   282     0070                     ??_lcd_data:	
   283                           ; 1 bytes @ 0x0
   284                           
   285     0070                     ?_lcd_initialise:	
   286                           ; 1 bytes @ 0x0
   287                           
   288     0070                     ?_main:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ?_bcd_to_ascii:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     ?_decimal_to_bcd:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     ?___awdiv:	
   298                           ; 1 bytes @ 0x0
   299                           
   300     0070                     ?___awmod:	
   301                           ; 2 bytes @ 0x0
   302                           
   303     0070                     ___awdiv@divisor:	
   304                           ; 2 bytes @ 0x0
   305                           
   306     0070                     ___awmod@divisor:	
   307                           ; 2 bytes @ 0x0
   308                           
   309                           
   310                           ; 2 bytes @ 0x0
   311     0070                     	ds	2
   312     0072                     lcd_command@cmd:
   313     0072                     lcd_data@data:	
   314                           ; 1 bytes @ 0x2
   315                           
   316     0072                     ___awdiv@dividend:	
   317                           ; 1 bytes @ 0x2
   318                           
   319     0072                     ___awmod@dividend:	
   320                           ; 2 bytes @ 0x2
   321                           
   322                           
   323                           ; 2 bytes @ 0x2
   324     0072                     	ds	1
   325     0073                     ??_lcd_initialise:
   326     0073                     ?_lcd_string:	
   327                           ; 1 bytes @ 0x3
   328                           
   329     0073                     ??_bcd_to_ascii:	
   330                           ; 1 bytes @ 0x3
   331                           
   332     0073                     lcd_string@num:	
   333                           ; 1 bytes @ 0x3
   334                           
   335                           
   336                           ; 1 bytes @ 0x3
   337     0073                     	ds	1
   338     0074                     ??_lcd_string:
   339     0074                     ??___awdiv:	
   340                           ; 1 bytes @ 0x4
   341                           
   342     0074                     ??___awmod:	
   343                           ; 1 bytes @ 0x4
   344                           
   345     0074                     bcd_to_ascii@value:	
   346                           ; 1 bytes @ 0x4
   347                           
   348                           
   349                           ; 1 bytes @ 0x4
   350     0074                     	ds	1
   351     0075                     lcd_string@str:
   352     0075                     bcd_to_ascii@bcd:	
   353                           ; 1 bytes @ 0x5
   354                           
   355     0075                     ___awdiv@counter:	
   356                           ; 1 bytes @ 0x5
   357                           
   358     0075                     ___awmod@counter:	
   359                           ; 1 bytes @ 0x5
   360                           
   361                           
   362                           ; 1 bytes @ 0x5
   363     0075                     	ds	1
   364     0076                     ?_DS1307_read:
   365     0076                     lcd_string@i:	
   366                           ; 1 bytes @ 0x6
   367                           
   368     0076                     DS1307_read@register_address:	
   369                           ; 1 bytes @ 0x6
   370                           
   371     0076                     ___awdiv@sign:	
   372                           ; 1 bytes @ 0x6
   373                           
   374     0076                     ___awmod@sign:	
   375                           ; 1 bytes @ 0x6
   376                           
   377                           
   378                           ; 1 bytes @ 0x6
   379     0076                     	ds	1
   380     0077                     ??_DS1307_read:
   381     0077                     DS1307_read@slave_address:	
   382                           ; 1 bytes @ 0x7
   383                           
   384     0077                     ___awdiv@quotient:	
   385                           ; 1 bytes @ 0x7
   386                           
   387                           
   388                           ; 2 bytes @ 0x7
   389     0077                     	ds	2
   390     0079                     ??_decimal_to_bcd:
   391                           
   392                           ; 1 bytes @ 0x9
   393     0079                     	ds	2
   394     007B                     ??_DS1307_write:
   395     007B                     DS1307_write@_second:	
   396                           ; 1 bytes @ 0xB
   397                           
   398                           
   399                           ; 1 bytes @ 0xB
   400     007B                     	ds	1
   401                           
   402                           	psect	cstackBANK0
   403     0020                     __pcstackBANK0:
   404     0020                     decimal_to_bcd@msb:
   405                           
   406                           ; 1 bytes @ 0x0
   407     0020                     	ds	1
   408     0021                     decimal_to_bcd@lsb:
   409                           
   410                           ; 1 bytes @ 0x1
   411     0021                     	ds	1
   412     0022                     decimal_to_bcd@hex:
   413                           
   414                           ; 1 bytes @ 0x2
   415     0022                     	ds	1
   416     0023                     decimal_to_bcd@value:
   417                           
   418                           ; 1 bytes @ 0x3
   419     0023                     	ds	1
   420     0024                     ?_DS1307_write:
   421     0024                     DS1307_write@_minute:	
   422                           ; 1 bytes @ 0x4
   423                           
   424                           
   425                           ; 1 bytes @ 0x4
   426     0024                     	ds	1
   427     0025                     DS1307_write@_hour:
   428                           
   429                           ; 1 bytes @ 0x5
   430     0025                     	ds	1
   431     0026                     DS1307_write@_day:
   432                           
   433                           ; 1 bytes @ 0x6
   434     0026                     	ds	1
   435     0027                     DS1307_write@_date:
   436                           
   437                           ; 1 bytes @ 0x7
   438     0027                     	ds	1
   439     0028                     DS1307_write@_month:
   440                           
   441                           ; 1 bytes @ 0x8
   442     0028                     	ds	1
   443     0029                     DS1307_write@_year:
   444                           
   445                           ; 1 bytes @ 0x9
   446     0029                     	ds	1
   447     002A                     ??_main:
   448                           
   449                           ; 1 bytes @ 0xA
   450     002A                     	ds	3
   451                           
   452                           	psect	maintext
   453     05B1                     __pmaintext:	
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   456 ;;
   457 ;; *************** function _main *****************
   458 ;; Defined at:
   459 ;;		line 88 in file "digitalclock.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : B00/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0
   475 ;;      Temps:          0       3       0       0       0
   476 ;;      Totals:         0       3       0       0       0
   477 ;;Total ram usage:        3 bytes
   478 ;; Hardware stack levels required when called: 3
   479 ;; This function calls:
   480 ;;		_DS1307_read
   481 ;;		_DS1307_write
   482 ;;		_lcd_command
   483 ;;		_lcd_initialise
   484 ;;		_lcd_string
   485 ;; This function is called by:
   486 ;;		Startup code after reset
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490     05B1                     _main:	
   491                           ;psect for function _main
   492                           
   493     05B1                     l1275:	
   494                           ;incstack = 0
   495                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   496                           
   497                           
   498                           ;digitalclock.c: 90:     TRISC = 0xff;
   499     05B1  30FF               	movlw	255
   500     05B2  1683               	bsf	3,5	;RP0=1, select bank1
   501     05B3  1303               	bcf	3,6	;RP1=0, select bank1
   502     05B4  0087               	movwf	7	;volatile
   503                           
   504                           ;digitalclock.c: 92:     SSPADD = 49;
   505     05B5  3031               	movlw	49
   506     05B6  0093               	movwf	19	;volatile
   507                           
   508                           ;digitalclock.c: 93:     SSPCON = 0x28;
   509     05B7  3028               	movlw	40
   510     05B8  1283               	bcf	3,5	;RP0=0, select bank0
   511     05B9  1303               	bcf	3,6	;RP1=0, select bank0
   512     05BA  0094               	movwf	20	;volatile
   513     05BB                     l1277:
   514                           
   515                           ;digitalclock.c: 95:     TRISD = 0x00;
   516     05BB  1683               	bsf	3,5	;RP0=1, select bank1
   517     05BC  1303               	bcf	3,6	;RP1=0, select bank1
   518     05BD  0188               	clrf	8	;volatile
   519     05BE                     l1279:
   520                           
   521                           ;digitalclock.c: 96:     PORTD = 0x00;
   522     05BE  1283               	bcf	3,5	;RP0=0, select bank0
   523     05BF  1303               	bcf	3,6	;RP1=0, select bank0
   524     05C0  0188               	clrf	8	;volatile
   525     05C1                     l1281:
   526                           
   527                           ;digitalclock.c: 97:     TRISB = 0x00;
   528     05C1  1683               	bsf	3,5	;RP0=1, select bank1
   529     05C2  1303               	bcf	3,6	;RP1=0, select bank1
   530     05C3  0186               	clrf	6	;volatile
   531     05C4                     l1283:
   532                           
   533                           ;digitalclock.c: 98:     PORTB = 0x00;
   534     05C4  1283               	bcf	3,5	;RP0=0, select bank0
   535     05C5  1303               	bcf	3,6	;RP1=0, select bank0
   536     05C6  0186               	clrf	6	;volatile
   537     05C7                     l1285:
   538                           
   539                           ;digitalclock.c: 99:     lcd_initialise();
   540     05C7  120A  118A  245D  120A  118A  	fcall	_lcd_initialise
   541     05CC                     l1287:
   542                           
   543                           ;digitalclock.c: 101:     lcd_command(0x80);
   544     05CC  3080               	movlw	128
   545     05CD  120A  118A  2448  120A  118A  	fcall	_lcd_command
   546     05D2                     l1289:
   547                           
   548                           ;digitalclock.c: 102:     lcd_string("CLOCK:",6);
   549     05D2  3006               	movlw	6
   550     05D3  00F3               	movwf	lcd_string@num
   551     05D4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   552     05D5  120A  118A  2476  120A  118A  	fcall	_lcd_string
   553     05DA                     l1291:
   554                           
   555                           ;digitalclock.c: 103:     lcd_command(0xc0);
   556     05DA  30C0               	movlw	192
   557     05DB  120A  118A  2448  120A  118A  	fcall	_lcd_command
   558     05E0                     l1293:
   559                           
   560                           ;digitalclock.c: 104:     lcd_string("DATE:",5);
   561     05E0  3005               	movlw	5
   562     05E1  00F3               	movwf	lcd_string@num
   563     05E2  3008               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   564     05E3  120A  118A  2476  120A  118A  	fcall	_lcd_string
   565     05E8                     l1295:
   566                           
   567                           ;digitalclock.c: 106:     DS1307_write(3,2,1,1,5,4,20);
   568     05E8  3002               	movlw	2
   569     05E9  1283               	bcf	3,5	;RP0=0, select bank0
   570     05EA  1303               	bcf	3,6	;RP1=0, select bank0
   571     05EB  00A4               	movwf	DS1307_write@_minute
   572     05EC  01A5               	clrf	DS1307_write@_hour
   573     05ED  0AA5               	incf	DS1307_write@_hour,f
   574     05EE  01A6               	clrf	DS1307_write@_day
   575     05EF  0AA6               	incf	DS1307_write@_day,f
   576     05F0  3005               	movlw	5
   577     05F1  00A7               	movwf	DS1307_write@_date
   578     05F2  3004               	movlw	4
   579     05F3  00A8               	movwf	DS1307_write@_month
   580     05F4  3014               	movlw	20
   581     05F5  00A9               	movwf	DS1307_write@_year
   582     05F6  3003               	movlw	3
   583     05F7  120A  118A  261F  120A  118A  	fcall	_DS1307_write
   584                           
   585                           ;digitalclock.c: 107:     _delay((unsigned long)((300)*(20000000/4000.0)));
   586     05FC  3008               	movlw	8
   587     05FD  1283               	bcf	3,5	;RP0=0, select bank0
   588     05FE  1303               	bcf	3,6	;RP1=0, select bank0
   589     05FF  00AC               	movwf	??_main+2
   590     0600  309D               	movlw	157
   591     0601  00AB               	movwf	??_main+1
   592     0602  3005               	movlw	5
   593     0603  00AA               	movwf	??_main
   594     0604                     u1337:
   595     0604  0BAA               	decfsz	??_main,f
   596     0605  2E04               	goto	u1337
   597     0606  0BAB               	decfsz	??_main+1,f
   598     0607  2E04               	goto	u1337
   599     0608  0BAC               	decfsz	??_main+2,f
   600     0609  2E04               	goto	u1337
   601     060A                     l66:	
   602                           ;digitalclock.c: 109: while(1)
   603                           
   604                           
   605                           ;digitalclock.c: 110: {;digitalclock.c: 111:         _delay((unsigned long)((20)*(200000
      +                          00/4000.0)));
   606     060A  3082               	movlw	130
   607     060B  1283               	bcf	3,5	;RP0=0, select bank0
   608     060C  1303               	bcf	3,6	;RP1=0, select bank0
   609     060D  00AB               	movwf	??_main+1
   610     060E  30DD               	movlw	221
   611     060F  00AA               	movwf	??_main
   612     0610                     u1347:
   613     0610  0BAA               	decfsz	??_main,f
   614     0611  2E10               	goto	u1347
   615     0612  0BAB               	decfsz	??_main+1,f
   616     0613  2E10               	goto	u1347
   617     0614                     l1297:
   618                           
   619                           ;digitalclock.c: 112:     DS1307_read(0xD0, 0);
   620     0614  01F6               	clrf	DS1307_read@register_address
   621     0615  30D0               	movlw	208
   622     0616  120A  118A  26C1  120A  118A  	fcall	_DS1307_read
   623     061B  2E0A               	goto	l66
   624     061C  120A  118A  2800   	ljmp	start
   625     061F                     __end_of_main:
   626                           
   627                           	psect	text1
   628     0476                     __ptext1:	
   629 ;; *************** function _lcd_string *****************
   630 ;; Defined at:
   631 ;;		line 78 in file "digitalclock.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  str             1    wreg     PTR const unsigned char 
   634 ;;		 -> STR_2(6), STR_1(7), 
   635 ;;  num             1    3[COMMON] unsigned char 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  str             1    5[COMMON] PTR const unsigned char 
   638 ;;		 -> STR_2(6), STR_1(7), 
   639 ;;  i               1    6[COMMON] unsigned char 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   649 ;;      Params:         1       0       0       0       0
   650 ;;      Locals:         2       0       0       0       0
   651 ;;      Temps:          1       0       0       0       0
   652 ;;      Totals:         4       0       0       0       0
   653 ;;Total ram usage:        4 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 1
   656 ;; This function calls:
   657 ;;		_lcd_data
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663     0476                     _lcd_string:	
   664                           ;psect for function _lcd_string
   665                           
   666                           
   667                           ;incstack = 0
   668                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   669                           ;lcd_string@str stored from wreg
   670     0476  00F5               	movwf	lcd_string@str
   671     0477                     l1177:
   672                           
   673                           ;digitalclock.c: 78: void lcd_string(const unsigned char *str, unsigned char num);digita
      +                          lclock.c: 79: {;digitalclock.c: 80:     unsigned char i;;digitalclock.c: 81:     for(i=0
      +                          ;i<num;i++)
   674     0477  01F6               	clrf	lcd_string@i
   675     0478  2C8A               	goto	l1183
   676     0479                     l1179:
   677                           
   678                           ;digitalclock.c: 82:     {;digitalclock.c: 83:         lcd_data(str[i]);
   679     0479  0876               	movf	lcd_string@i,w
   680     047A  0775               	addwf	lcd_string@str,w
   681     047B  0084               	movwf	4
   682     047C  120A  118A  2003  120A  118A  	fcall	stringdir
   683     0481  120A  118A  2433  120A  118A  	fcall	_lcd_data
   684     0486                     l1181:
   685                           
   686                           ;digitalclock.c: 84:     }
   687     0486  3001               	movlw	1
   688     0487  00F4               	movwf	??_lcd_string
   689     0488  0874               	movf	??_lcd_string,w
   690     0489  07F6               	addwf	lcd_string@i,f
   691     048A                     l1183:
   692     048A  0873               	movf	lcd_string@num,w
   693     048B  0276               	subwf	lcd_string@i,w
   694     048C  1C03               	skipc
   695     048D  2C8F               	goto	u881
   696     048E  2C90               	goto	u880
   697     048F                     u881:
   698     048F  2C79               	goto	l1179
   699     0490                     u880:
   700     0490                     l45:
   701     0490  0008               	return
   702     0491                     __end_of_lcd_string:
   703                           
   704                           	psect	text2
   705     045D                     __ptext2:	
   706 ;; *************** function _lcd_initialise *****************
   707 ;; Defined at:
   708 ;;		line 70 in file "digitalclock.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0, pclath, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   722 ;;      Params:         0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0
   724 ;;      Temps:          0       0       0       0       0
   725 ;;      Totals:         0       0       0       0       0
   726 ;;Total ram usage:        0 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; Hardware stack levels required when called: 1
   729 ;; This function calls:
   730 ;;		_lcd_command
   731 ;; This function is called by:
   732 ;;		_main
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736     045D                     _lcd_initialise:	
   737                           ;psect for function _lcd_initialise
   738                           
   739     045D                     l1175:	
   740                           ;incstack = 0
   741                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   742                           
   743                           
   744                           ;digitalclock.c: 72:     lcd_command(0x38);
   745     045D  3038               	movlw	56
   746     045E  120A  118A  2448  120A  118A  	fcall	_lcd_command
   747                           
   748                           ;digitalclock.c: 73:     lcd_command(0x06);
   749     0463  3006               	movlw	6
   750     0464  120A  118A  2448  120A  118A  	fcall	_lcd_command
   751                           
   752                           ;digitalclock.c: 74:     lcd_command(0x0c);
   753     0469  300C               	movlw	12
   754     046A  120A  118A  2448  120A  118A  	fcall	_lcd_command
   755                           
   756                           ;digitalclock.c: 75:     lcd_command(0x01);
   757     046F  3001               	movlw	1
   758     0470  120A  118A  2448  120A  118A  	fcall	_lcd_command
   759     0475                     l39:
   760     0475  0008               	return
   761     0476                     __end_of_lcd_initialise:
   762                           
   763                           	psect	text3
   764     061F                     __ptext3:	
   765 ;; *************** function _DS1307_write *****************
   766 ;; Defined at:
   767 ;;		line 143 in file "digitalclock.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  _second         1    wreg     unsigned char 
   770 ;;  _minute         1    4[BANK0 ] unsigned char 
   771 ;;  _hour           1    5[BANK0 ] unsigned char 
   772 ;;  _day            1    6[BANK0 ] unsigned char 
   773 ;;  _date           1    7[BANK0 ] unsigned char 
   774 ;;  _month          1    8[BANK0 ] unsigned char 
   775 ;;  _year           1    9[BANK0 ] unsigned char 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  _second         1   11[COMMON] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0, pclath, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         0       6       0       0       0
   788 ;;      Locals:         1       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0
   790 ;;      Totals:         1       6       0       0       0
   791 ;;Total ram usage:        7 bytes
   792 ;; Hardware stack levels used: 1
   793 ;; Hardware stack levels required when called: 2
   794 ;; This function calls:
   795 ;;		_decimal_to_bcd
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801     061F                     _DS1307_write:	
   802                           ;psect for function _DS1307_write
   803                           
   804                           
   805                           ;incstack = 0
   806                           ; Regs used in _DS1307_write: [wreg+status,2+status,0+pclath+cstack]
   807                           ;DS1307_write@_second stored from wreg
   808     061F  00FB               	movwf	DS1307_write@_second
   809     0620                     l1185:
   810                           
   811                           ;digitalclock.c: 143: void DS1307_write(char _second, char _minute, char _hour, char _da
      +                          y, char _date, char _month, char _year);digitalclock.c: 144: {;digitalclock.c: 145:     
      +                          SSPCON2bits.SEN = 1;
   812     0620  1683               	bsf	3,5	;RP0=1, select bank1
   813     0621  1303               	bcf	3,6	;RP1=0, select bank1
   814     0622  1411               	bsf	17,0	;volatile
   815     0623                     l78:	
   816                           ;digitalclock.c: 146:     while(SSPCON2bits.SEN);
   817                           
   818     0623  1811               	btfsc	17,0	;volatile
   819     0624  2E26               	goto	u891
   820     0625  2E27               	goto	u890
   821     0626                     u891:
   822     0626  2E23               	goto	l78
   823     0627                     u890:
   824     0627                     l80:
   825                           
   826                           ;digitalclock.c: 147:     PIR1bits.SSPIF = 0;
   827     0627  1283               	bcf	3,5	;RP0=0, select bank0
   828     0628  1303               	bcf	3,6	;RP1=0, select bank0
   829     0629  118C               	bcf	12,3	;volatile
   830     062A                     l1187:
   831                           
   832                           ;digitalclock.c: 149:     SSPBUF = 0xD0;
   833     062A  30D0               	movlw	208
   834     062B  0093               	movwf	19	;volatile
   835     062C                     l81:	
   836                           ;digitalclock.c: 150:     while(!PIR1bits.SSPIF);
   837                           
   838     062C  1D8C               	btfss	12,3	;volatile
   839     062D  2E2F               	goto	u901
   840     062E  2E30               	goto	u900
   841     062F                     u901:
   842     062F  2E2C               	goto	l81
   843     0630                     u900:
   844     0630                     l83:
   845                           
   846                           ;digitalclock.c: 151:     PIR1bits.SSPIF = 0;
   847     0630  118C               	bcf	12,3	;volatile
   848                           
   849                           ;digitalclock.c: 152:     if(SSPCON2bits.ACKSTAT)
   850     0631  1683               	bsf	3,5	;RP0=1, select bank1
   851     0632  1303               	bcf	3,6	;RP1=0, select bank1
   852     0633  1F11               	btfss	17,6	;volatile
   853     0634  2E36               	goto	u911
   854     0635  2E37               	goto	u910
   855     0636                     u911:
   856     0636  2E3D               	goto	l1191
   857     0637                     u910:
   858     0637                     l1189:
   859                           
   860                           ;digitalclock.c: 153:     {;digitalclock.c: 154:         SSPCON2bits.PEN = 1;
   861     0637  1511               	bsf	17,2	;volatile
   862     0638                     l85:	
   863                           ;digitalclock.c: 155:         while(SSPCON2bits.PEN );
   864                           
   865     0638  1911               	btfsc	17,2	;volatile
   866     0639  2E3B               	goto	u921
   867     063A  2E3C               	goto	u920
   868     063B                     u921:
   869     063B  2E38               	goto	l85
   870     063C                     u920:
   871     063C  2EC0               	goto	l88
   872     063D                     l1191:
   873                           
   874                           ;digitalclock.c: 160:     SSPBUF = (0x00);
   875     063D  1283               	bcf	3,5	;RP0=0, select bank0
   876     063E  1303               	bcf	3,6	;RP1=0, select bank0
   877     063F  0193               	clrf	19	;volatile
   878     0640                     l89:	
   879                           ;digitalclock.c: 161:     while(!PIR1bits.SSPIF);
   880                           
   881     0640  1D8C               	btfss	12,3	;volatile
   882     0641  2E43               	goto	u931
   883     0642  2E44               	goto	u930
   884     0643                     u931:
   885     0643  2E40               	goto	l89
   886     0644                     u930:
   887     0644                     l91:
   888                           
   889                           ;digitalclock.c: 162:     PIR1bits.SSPIF = 0;
   890     0644  118C               	bcf	12,3	;volatile
   891                           
   892                           ;digitalclock.c: 163:     if(SSPCON2bits.ACKSTAT)
   893     0645  1683               	bsf	3,5	;RP0=1, select bank1
   894     0646  1303               	bcf	3,6	;RP1=0, select bank1
   895     0647  1F11               	btfss	17,6	;volatile
   896     0648  2E4A               	goto	u941
   897     0649  2E4B               	goto	u940
   898     064A                     u941:
   899     064A  2E51               	goto	l1195
   900     064B                     u940:
   901     064B                     l1193:
   902                           
   903                           ;digitalclock.c: 164:     {;digitalclock.c: 165:       SSPCON2bits.PEN = 1;
   904     064B  1511               	bsf	17,2	;volatile
   905     064C                     l93:	
   906                           ;digitalclock.c: 166:        { while(SSPCON2bits.PEN );}
   907                           
   908     064C  1911               	btfsc	17,2	;volatile
   909     064D  2E4F               	goto	u951
   910     064E  2E50               	goto	u950
   911     064F                     u951:
   912     064F  2E4C               	goto	l93
   913     0650                     u950:
   914     0650  2EC0               	goto	l88
   915     0651                     l1195:
   916                           
   917                           ;digitalclock.c: 170:     SSPBUF = decimal_to_bcd(_second);
   918     0651  087B               	movf	DS1307_write@_second,w
   919     0652  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
   920     0657  1283               	bcf	3,5	;RP0=0, select bank0
   921     0658  1303               	bcf	3,6	;RP1=0, select bank0
   922     0659  0093               	movwf	19	;volatile
   923     065A                     l96:	
   924                           ;digitalclock.c: 171:     while(!PIR1bits.SSPIF);
   925                           
   926     065A  1D8C               	btfss	12,3	;volatile
   927     065B  2E5D               	goto	u961
   928     065C  2E5E               	goto	u960
   929     065D                     u961:
   930     065D  2E5A               	goto	l96
   931     065E                     u960:
   932     065E                     l98:
   933                           
   934                           ;digitalclock.c: 172:     PIR1bits.SSPIF = 0;
   935     065E  118C               	bcf	12,3	;volatile
   936     065F                     l1197:
   937                           
   938                           ;digitalclock.c: 174:     SSPBUF = decimal_to_bcd(_minute);
   939     065F  0824               	movf	DS1307_write@_minute,w
   940     0660  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
   941     0665  1283               	bcf	3,5	;RP0=0, select bank0
   942     0666  1303               	bcf	3,6	;RP1=0, select bank0
   943     0667  0093               	movwf	19	;volatile
   944     0668                     l99:	
   945                           ;digitalclock.c: 175:     while(!PIR1bits.SSPIF);
   946                           
   947     0668  1D8C               	btfss	12,3	;volatile
   948     0669  2E6B               	goto	u971
   949     066A  2E6C               	goto	u970
   950     066B                     u971:
   951     066B  2E68               	goto	l99
   952     066C                     u970:
   953     066C                     l101:
   954                           
   955                           ;digitalclock.c: 176:     PIR1bits.SSPIF = 0;
   956     066C  118C               	bcf	12,3	;volatile
   957     066D                     l1199:
   958                           
   959                           ;digitalclock.c: 178:     SSPBUF = decimal_to_bcd(_hour);
   960     066D  0825               	movf	DS1307_write@_hour,w
   961     066E  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
   962     0673  1283               	bcf	3,5	;RP0=0, select bank0
   963     0674  1303               	bcf	3,6	;RP1=0, select bank0
   964     0675  0093               	movwf	19	;volatile
   965     0676                     l102:	
   966                           ;digitalclock.c: 179:     while(!PIR1bits.SSPIF);
   967                           
   968     0676  1D8C               	btfss	12,3	;volatile
   969     0677  2E79               	goto	u981
   970     0678  2E7A               	goto	u980
   971     0679                     u981:
   972     0679  2E76               	goto	l102
   973     067A                     u980:
   974     067A                     l104:
   975                           
   976                           ;digitalclock.c: 180:     PIR1bits.SSPIF = 0;
   977     067A  118C               	bcf	12,3	;volatile
   978     067B                     l1201:
   979                           
   980                           ;digitalclock.c: 182:     SSPBUF = decimal_to_bcd(_day);
   981     067B  0826               	movf	DS1307_write@_day,w
   982     067C  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
   983     0681  1283               	bcf	3,5	;RP0=0, select bank0
   984     0682  1303               	bcf	3,6	;RP1=0, select bank0
   985     0683  0093               	movwf	19	;volatile
   986     0684                     l105:	
   987                           ;digitalclock.c: 183:     while(!PIR1bits.SSPIF);
   988                           
   989     0684  1D8C               	btfss	12,3	;volatile
   990     0685  2E87               	goto	u991
   991     0686  2E88               	goto	u990
   992     0687                     u991:
   993     0687  2E84               	goto	l105
   994     0688                     u990:
   995     0688                     l107:
   996                           
   997                           ;digitalclock.c: 184:     PIR1bits.SSPIF = 0;
   998     0688  118C               	bcf	12,3	;volatile
   999     0689                     l1203:
  1000                           
  1001                           ;digitalclock.c: 186:     SSPBUF = decimal_to_bcd(_date);
  1002     0689  0827               	movf	DS1307_write@_date,w
  1003     068A  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
  1004     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1005     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1006     0691  0093               	movwf	19	;volatile
  1007     0692                     l108:	
  1008                           ;digitalclock.c: 187:     while(!PIR1bits.SSPIF);
  1009                           
  1010     0692  1D8C               	btfss	12,3	;volatile
  1011     0693  2E95               	goto	u1001
  1012     0694  2E96               	goto	u1000
  1013     0695                     u1001:
  1014     0695  2E92               	goto	l108
  1015     0696                     u1000:
  1016     0696                     l110:
  1017                           
  1018                           ;digitalclock.c: 188:     PIR1bits.SSPIF = 0;
  1019     0696  118C               	bcf	12,3	;volatile
  1020     0697                     l1205:
  1021                           
  1022                           ;digitalclock.c: 190:     SSPBUF = decimal_to_bcd(_month);
  1023     0697  0828               	movf	DS1307_write@_month,w
  1024     0698  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
  1025     069D  1283               	bcf	3,5	;RP0=0, select bank0
  1026     069E  1303               	bcf	3,6	;RP1=0, select bank0
  1027     069F  0093               	movwf	19	;volatile
  1028     06A0                     l111:	
  1029                           ;digitalclock.c: 191:     while(!PIR1bits.SSPIF);
  1030                           
  1031     06A0  1D8C               	btfss	12,3	;volatile
  1032     06A1  2EA3               	goto	u1011
  1033     06A2  2EA4               	goto	u1010
  1034     06A3                     u1011:
  1035     06A3  2EA0               	goto	l111
  1036     06A4                     u1010:
  1037     06A4                     l113:
  1038                           
  1039                           ;digitalclock.c: 192:     PIR1bits.SSPIF = 0;
  1040     06A4  118C               	bcf	12,3	;volatile
  1041     06A5                     l1207:
  1042                           
  1043                           ;digitalclock.c: 194:     SSPBUF = decimal_to_bcd(_year);
  1044     06A5  0829               	movf	DS1307_write@_year,w
  1045     06A6  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
  1046     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1047     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1048     06AD  0093               	movwf	19	;volatile
  1049     06AE                     l114:	
  1050                           ;digitalclock.c: 195:     while(!PIR1bits.SSPIF);
  1051                           
  1052     06AE  1D8C               	btfss	12,3	;volatile
  1053     06AF  2EB1               	goto	u1021
  1054     06B0  2EB2               	goto	u1020
  1055     06B1                     u1021:
  1056     06B1  2EAE               	goto	l114
  1057     06B2                     u1020:
  1058     06B2                     l116:
  1059                           
  1060                           ;digitalclock.c: 196:     PIR1bits.SSPIF = 0;
  1061     06B2  118C               	bcf	12,3	;volatile
  1062     06B3                     l1209:
  1063                           
  1064                           ;digitalclock.c: 198:     SSPBUF = 0x00;
  1065     06B3  0193               	clrf	19	;volatile
  1066     06B4                     l117:	
  1067                           ;digitalclock.c: 199:     while(!PIR1bits.SSPIF);
  1068                           
  1069     06B4  1D8C               	btfss	12,3	;volatile
  1070     06B5  2EB7               	goto	u1031
  1071     06B6  2EB8               	goto	u1030
  1072     06B7                     u1031:
  1073     06B7  2EB4               	goto	l117
  1074     06B8                     u1030:
  1075     06B8                     l119:
  1076                           
  1077                           ;digitalclock.c: 200:     PIR1bits.SSPIF = 0;
  1078     06B8  118C               	bcf	12,3	;volatile
  1079                           
  1080                           ;digitalclock.c: 202:     SSPCON2bits.PEN = 1;
  1081     06B9  1683               	bsf	3,5	;RP0=1, select bank1
  1082     06BA  1303               	bcf	3,6	;RP1=0, select bank1
  1083     06BB  1511               	bsf	17,2	;volatile
  1084     06BC                     l120:	
  1085                           ;digitalclock.c: 203:     while(SSPCON2bits.PEN);
  1086                           
  1087     06BC  1911               	btfsc	17,2	;volatile
  1088     06BD  2EBF               	goto	u1041
  1089     06BE  2EC0               	goto	u1040
  1090     06BF                     u1041:
  1091     06BF  2EBC               	goto	l120
  1092     06C0                     u1040:
  1093     06C0                     l88:
  1094     06C0  0008               	return
  1095     06C1                     __end_of_DS1307_write:
  1096                           
  1097                           	psect	text4
  1098     04B9                     __ptext4:	
  1099 ;; *************** function _decimal_to_bcd *****************
  1100 ;; Defined at:
  1101 ;;		line 134 in file "digitalclock.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  value           1    wreg     unsigned char 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  value           1    3[BANK0 ] unsigned char 
  1106 ;;  hex             1    2[BANK0 ] unsigned char 
  1107 ;;  lsb             1    1[BANK0 ] unsigned char 
  1108 ;;  msb             1    0[BANK0 ] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      unsigned char 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         0       0       0       0       0
  1119 ;;      Locals:         0       4       0       0       0
  1120 ;;      Temps:          2       0       0       0       0
  1121 ;;      Totals:         2       4       0       0       0
  1122 ;;Total ram usage:        6 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 1
  1125 ;; This function calls:
  1126 ;;		___awdiv
  1127 ;;		___awmod
  1128 ;; This function is called by:
  1129 ;;		_DS1307_write
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133     04B9                     _decimal_to_bcd:	
  1134                           ;psect for function _decimal_to_bcd
  1135                           
  1136                           
  1137                           ;incstack = 0
  1138                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1139                           ;decimal_to_bcd@value stored from wreg
  1140     04B9  1283               	bcf	3,5	;RP0=0, select bank0
  1141     04BA  1303               	bcf	3,6	;RP1=0, select bank0
  1142     04BB  00A3               	movwf	decimal_to_bcd@value
  1143     04BC                     l1167:
  1144                           
  1145                           ;digitalclock.c: 134: char decimal_to_bcd(unsigned char value);digitalclock.c: 135: {;di
      +                          gitalclock.c: 136:     unsigned char msb,lsb,hex;;digitalclock.c: 137:     msb = value/1
      +                          0;
  1146     04BC  300A               	movlw	10
  1147     04BD  00F0               	movwf	___awdiv@divisor
  1148     04BE  3000               	movlw	0
  1149     04BF  00F1               	movwf	___awdiv@divisor+1
  1150     04C0  0823               	movf	decimal_to_bcd@value,w
  1151     04C1  00F9               	movwf	??_decimal_to_bcd
  1152     04C2  01FA               	clrf	??_decimal_to_bcd+1
  1153     04C3  0879               	movf	??_decimal_to_bcd,w
  1154     04C4  00F2               	movwf	___awdiv@dividend
  1155     04C5  087A               	movf	??_decimal_to_bcd+1,w
  1156     04C6  00F3               	movwf	___awdiv@dividend+1
  1157     04C7  120A  118A  254A  120A  118A  	fcall	___awdiv
  1158     04CC  0870               	movf	?___awdiv,w
  1159     04CD  1283               	bcf	3,5	;RP0=0, select bank0
  1160     04CE  1303               	bcf	3,6	;RP1=0, select bank0
  1161     04CF  00A0               	movwf	decimal_to_bcd@msb
  1162                           
  1163                           ;digitalclock.c: 138:     lsb = value%10;
  1164     04D0  300A               	movlw	10
  1165     04D1  00F0               	movwf	___awmod@divisor
  1166     04D2  3000               	movlw	0
  1167     04D3  00F1               	movwf	___awmod@divisor+1
  1168     04D4  0823               	movf	decimal_to_bcd@value,w
  1169     04D5  00F9               	movwf	??_decimal_to_bcd
  1170     04D6  01FA               	clrf	??_decimal_to_bcd+1
  1171     04D7  0879               	movf	??_decimal_to_bcd,w
  1172     04D8  00F2               	movwf	___awmod@dividend
  1173     04D9  087A               	movf	??_decimal_to_bcd+1,w
  1174     04DA  00F3               	movwf	___awmod@dividend+1
  1175     04DB  120A  118A  24F1  120A  118A  	fcall	___awmod
  1176     04E0  0870               	movf	?___awmod,w
  1177     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1178     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1179     04E3  00A1               	movwf	decimal_to_bcd@lsb
  1180     04E4                     l1169:
  1181                           
  1182                           ;digitalclock.c: 139:     hex = (unsigned char)((msb<<4)+lsb);
  1183     04E4  0820               	movf	decimal_to_bcd@msb,w
  1184     04E5  00F9               	movwf	??_decimal_to_bcd
  1185     04E6  3004               	movlw	4
  1186     04E7                     u875:
  1187     04E7  1003               	clrc
  1188     04E8  0DF9               	rlf	??_decimal_to_bcd,f
  1189     04E9  3EFF               	addlw	-1
  1190     04EA  1D03               	skipz
  1191     04EB  2CE7               	goto	u875
  1192     04EC  0821               	movf	decimal_to_bcd@lsb,w
  1193     04ED  0779               	addwf	??_decimal_to_bcd,w
  1194     04EE  00A2               	movwf	decimal_to_bcd@hex
  1195     04EF                     l1171:
  1196                           
  1197                           ;digitalclock.c: 140:     return hex;
  1198     04EF  0822               	movf	decimal_to_bcd@hex,w
  1199     04F0                     l75:
  1200     04F0  0008               	return
  1201     04F1                     __end_of_decimal_to_bcd:
  1202                           
  1203                           	psect	text5
  1204     04F1                     __ptext5:	
  1205 ;; *************** function ___awmod *****************
  1206 ;; Defined at:
  1207 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  divisor         2    0[COMMON] int 
  1210 ;;  dividend        2    2[COMMON] int 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  sign            1    6[COMMON] unsigned char 
  1213 ;;  counter         1    5[COMMON] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  2    0[COMMON] int 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         4       0       0       0       0
  1224 ;;      Locals:         2       0       0       0       0
  1225 ;;      Temps:          1       0       0       0       0
  1226 ;;      Totals:         7       0       0       0       0
  1227 ;;Total ram usage:        7 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_decimal_to_bcd
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236     04F1                     ___awmod:	
  1237                           ;psect for function ___awmod
  1238                           
  1239     04F1                     l1101:	
  1240                           ;incstack = 0
  1241                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1242                           
  1243     04F1  01F6               	clrf	___awmod@sign
  1244     04F2                     l1103:
  1245     04F2  1FF3               	btfss	___awmod@dividend+1,7
  1246     04F3  2CF5               	goto	u771
  1247     04F4  2CF6               	goto	u770
  1248     04F5                     u771:
  1249     04F5  2CFD               	goto	l1109
  1250     04F6                     u770:
  1251     04F6                     l1105:
  1252     04F6  09F2               	comf	___awmod@dividend,f
  1253     04F7  09F3               	comf	___awmod@dividend+1,f
  1254     04F8  0AF2               	incf	___awmod@dividend,f
  1255     04F9  1903               	skipnz
  1256     04FA  0AF3               	incf	___awmod@dividend+1,f
  1257     04FB                     l1107:
  1258     04FB  01F6               	clrf	___awmod@sign
  1259     04FC  0AF6               	incf	___awmod@sign,f
  1260     04FD                     l1109:
  1261     04FD  1FF1               	btfss	___awmod@divisor+1,7
  1262     04FE  2D00               	goto	u781
  1263     04FF  2D01               	goto	u780
  1264     0500                     u781:
  1265     0500  2D06               	goto	l1113
  1266     0501                     u780:
  1267     0501                     l1111:
  1268     0501  09F0               	comf	___awmod@divisor,f
  1269     0502  09F1               	comf	___awmod@divisor+1,f
  1270     0503  0AF0               	incf	___awmod@divisor,f
  1271     0504  1903               	skipnz
  1272     0505  0AF1               	incf	___awmod@divisor+1,f
  1273     0506                     l1113:
  1274     0506  0870               	movf	___awmod@divisor,w
  1275     0507  0471               	iorwf	___awmod@divisor+1,w
  1276     0508  1903               	btfsc	3,2
  1277     0509  2D0B               	goto	u791
  1278     050A  2D0C               	goto	u790
  1279     050B                     u791:
  1280     050B  2D3B               	goto	l1131
  1281     050C                     u790:
  1282     050C                     l1115:
  1283     050C  01F5               	clrf	___awmod@counter
  1284     050D  0AF5               	incf	___awmod@counter,f
  1285     050E  2D1A               	goto	l1121
  1286     050F                     l1117:
  1287     050F  3001               	movlw	1
  1288     0510                     u805:
  1289     0510  1003               	clrc
  1290     0511  0DF0               	rlf	___awmod@divisor,f
  1291     0512  0DF1               	rlf	___awmod@divisor+1,f
  1292     0513  3EFF               	addlw	-1
  1293     0514  1D03               	skipz
  1294     0515  2D10               	goto	u805
  1295     0516                     l1119:
  1296     0516  3001               	movlw	1
  1297     0517  00F4               	movwf	??___awmod
  1298     0518  0874               	movf	??___awmod,w
  1299     0519  07F5               	addwf	___awmod@counter,f
  1300     051A                     l1121:
  1301     051A  1FF1               	btfss	___awmod@divisor+1,7
  1302     051B  2D1D               	goto	u811
  1303     051C  2D1E               	goto	u810
  1304     051D                     u811:
  1305     051D  2D0F               	goto	l1117
  1306     051E                     u810:
  1307     051E                     l1123:
  1308     051E  0871               	movf	___awmod@divisor+1,w
  1309     051F  0273               	subwf	___awmod@dividend+1,w
  1310     0520  1D03               	skipz
  1311     0521  2D24               	goto	u825
  1312     0522  0870               	movf	___awmod@divisor,w
  1313     0523  0272               	subwf	___awmod@dividend,w
  1314     0524                     u825:
  1315     0524  1C03               	skipc
  1316     0525  2D27               	goto	u821
  1317     0526  2D28               	goto	u820
  1318     0527                     u821:
  1319     0527  2D2E               	goto	l1127
  1320     0528                     u820:
  1321     0528                     l1125:
  1322     0528  0870               	movf	___awmod@divisor,w
  1323     0529  02F2               	subwf	___awmod@dividend,f
  1324     052A  0871               	movf	___awmod@divisor+1,w
  1325     052B  1C03               	skipc
  1326     052C  03F3               	decf	___awmod@dividend+1,f
  1327     052D  02F3               	subwf	___awmod@dividend+1,f
  1328     052E                     l1127:
  1329     052E  3001               	movlw	1
  1330     052F                     u835:
  1331     052F  1003               	clrc
  1332     0530  0CF1               	rrf	___awmod@divisor+1,f
  1333     0531  0CF0               	rrf	___awmod@divisor,f
  1334     0532  3EFF               	addlw	-1
  1335     0533  1D03               	skipz
  1336     0534  2D2F               	goto	u835
  1337     0535                     l1129:
  1338     0535  3001               	movlw	1
  1339     0536  02F5               	subwf	___awmod@counter,f
  1340     0537  1D03               	btfss	3,2
  1341     0538  2D3A               	goto	u841
  1342     0539  2D3B               	goto	u840
  1343     053A                     u841:
  1344     053A  2D1E               	goto	l1123
  1345     053B                     u840:
  1346     053B                     l1131:
  1347     053B  0876               	movf	___awmod@sign,w
  1348     053C  1903               	btfsc	3,2
  1349     053D  2D3F               	goto	u851
  1350     053E  2D40               	goto	u850
  1351     053F                     u851:
  1352     053F  2D45               	goto	l1135
  1353     0540                     u850:
  1354     0540                     l1133:
  1355     0540  09F2               	comf	___awmod@dividend,f
  1356     0541  09F3               	comf	___awmod@dividend+1,f
  1357     0542  0AF2               	incf	___awmod@dividend,f
  1358     0543  1903               	skipnz
  1359     0544  0AF3               	incf	___awmod@dividend+1,f
  1360     0545                     l1135:
  1361     0545  0873               	movf	___awmod@dividend+1,w
  1362     0546  00F1               	movwf	?___awmod+1
  1363     0547  0872               	movf	___awmod@dividend,w
  1364     0548  00F0               	movwf	?___awmod
  1365     0549                     l455:
  1366     0549  0008               	return
  1367     054A                     __end_of___awmod:
  1368                           
  1369                           	psect	text6
  1370     054A                     __ptext6:	
  1371 ;; *************** function ___awdiv *****************
  1372 ;; Defined at:
  1373 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  divisor         2    0[COMMON] int 
  1376 ;;  dividend        2    2[COMMON] int 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  quotient        2    7[COMMON] int 
  1379 ;;  sign            1    6[COMMON] unsigned char 
  1380 ;;  counter         1    5[COMMON] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  2    0[COMMON] int 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1390 ;;      Params:         4       0       0       0       0
  1391 ;;      Locals:         4       0       0       0       0
  1392 ;;      Temps:          1       0       0       0       0
  1393 ;;      Totals:         9       0       0       0       0
  1394 ;;Total ram usage:        9 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_decimal_to_bcd
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403     054A                     ___awdiv:	
  1404                           ;psect for function ___awdiv
  1405                           
  1406     054A                     l1057:	
  1407                           ;incstack = 0
  1408                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1409                           
  1410     054A  01F6               	clrf	___awdiv@sign
  1411     054B                     l1059:
  1412     054B  1FF1               	btfss	___awdiv@divisor+1,7
  1413     054C  2D4E               	goto	u671
  1414     054D  2D4F               	goto	u670
  1415     054E                     u671:
  1416     054E  2D56               	goto	l1065
  1417     054F                     u670:
  1418     054F                     l1061:
  1419     054F  09F0               	comf	___awdiv@divisor,f
  1420     0550  09F1               	comf	___awdiv@divisor+1,f
  1421     0551  0AF0               	incf	___awdiv@divisor,f
  1422     0552  1903               	skipnz
  1423     0553  0AF1               	incf	___awdiv@divisor+1,f
  1424     0554                     l1063:
  1425     0554  01F6               	clrf	___awdiv@sign
  1426     0555  0AF6               	incf	___awdiv@sign,f
  1427     0556                     l1065:
  1428     0556  1FF3               	btfss	___awdiv@dividend+1,7
  1429     0557  2D59               	goto	u681
  1430     0558  2D5A               	goto	u680
  1431     0559                     u681:
  1432     0559  2D63               	goto	l1071
  1433     055A                     u680:
  1434     055A                     l1067:
  1435     055A  09F2               	comf	___awdiv@dividend,f
  1436     055B  09F3               	comf	___awdiv@dividend+1,f
  1437     055C  0AF2               	incf	___awdiv@dividend,f
  1438     055D  1903               	skipnz
  1439     055E  0AF3               	incf	___awdiv@dividend+1,f
  1440     055F                     l1069:
  1441     055F  3001               	movlw	1
  1442     0560  00F4               	movwf	??___awdiv
  1443     0561  0874               	movf	??___awdiv,w
  1444     0562  06F6               	xorwf	___awdiv@sign,f
  1445     0563                     l1071:
  1446     0563  01F7               	clrf	___awdiv@quotient
  1447     0564  01F8               	clrf	___awdiv@quotient+1
  1448     0565                     l1073:
  1449     0565  0870               	movf	___awdiv@divisor,w
  1450     0566  0471               	iorwf	___awdiv@divisor+1,w
  1451     0567  1903               	btfsc	3,2
  1452     0568  2D6A               	goto	u691
  1453     0569  2D6B               	goto	u690
  1454     056A                     u691:
  1455     056A  2DA2               	goto	l1093
  1456     056B                     u690:
  1457     056B                     l1075:
  1458     056B  01F5               	clrf	___awdiv@counter
  1459     056C  0AF5               	incf	___awdiv@counter,f
  1460     056D  2D79               	goto	l1081
  1461     056E                     l1077:
  1462     056E  3001               	movlw	1
  1463     056F                     u705:
  1464     056F  1003               	clrc
  1465     0570  0DF0               	rlf	___awdiv@divisor,f
  1466     0571  0DF1               	rlf	___awdiv@divisor+1,f
  1467     0572  3EFF               	addlw	-1
  1468     0573  1D03               	skipz
  1469     0574  2D6F               	goto	u705
  1470     0575                     l1079:
  1471     0575  3001               	movlw	1
  1472     0576  00F4               	movwf	??___awdiv
  1473     0577  0874               	movf	??___awdiv,w
  1474     0578  07F5               	addwf	___awdiv@counter,f
  1475     0579                     l1081:
  1476     0579  1FF1               	btfss	___awdiv@divisor+1,7
  1477     057A  2D7C               	goto	u711
  1478     057B  2D7D               	goto	u710
  1479     057C                     u711:
  1480     057C  2D6E               	goto	l1077
  1481     057D                     u710:
  1482     057D                     l1083:
  1483     057D  3001               	movlw	1
  1484     057E                     u725:
  1485     057E  1003               	clrc
  1486     057F  0DF7               	rlf	___awdiv@quotient,f
  1487     0580  0DF8               	rlf	___awdiv@quotient+1,f
  1488     0581  3EFF               	addlw	-1
  1489     0582  1D03               	skipz
  1490     0583  2D7E               	goto	u725
  1491     0584  0871               	movf	___awdiv@divisor+1,w
  1492     0585  0273               	subwf	___awdiv@dividend+1,w
  1493     0586  1D03               	skipz
  1494     0587  2D8A               	goto	u735
  1495     0588  0870               	movf	___awdiv@divisor,w
  1496     0589  0272               	subwf	___awdiv@dividend,w
  1497     058A                     u735:
  1498     058A  1C03               	skipc
  1499     058B  2D8D               	goto	u731
  1500     058C  2D8E               	goto	u730
  1501     058D                     u731:
  1502     058D  2D95               	goto	l1089
  1503     058E                     u730:
  1504     058E                     l1085:
  1505     058E  0870               	movf	___awdiv@divisor,w
  1506     058F  02F2               	subwf	___awdiv@dividend,f
  1507     0590  0871               	movf	___awdiv@divisor+1,w
  1508     0591  1C03               	skipc
  1509     0592  03F3               	decf	___awdiv@dividend+1,f
  1510     0593  02F3               	subwf	___awdiv@dividend+1,f
  1511     0594                     l1087:
  1512     0594  1477               	bsf	___awdiv@quotient,0
  1513     0595                     l1089:
  1514     0595  3001               	movlw	1
  1515     0596                     u745:
  1516     0596  1003               	clrc
  1517     0597  0CF1               	rrf	___awdiv@divisor+1,f
  1518     0598  0CF0               	rrf	___awdiv@divisor,f
  1519     0599  3EFF               	addlw	-1
  1520     059A  1D03               	skipz
  1521     059B  2D96               	goto	u745
  1522     059C                     l1091:
  1523     059C  3001               	movlw	1
  1524     059D  02F5               	subwf	___awdiv@counter,f
  1525     059E  1D03               	btfss	3,2
  1526     059F  2DA1               	goto	u751
  1527     05A0  2DA2               	goto	u750
  1528     05A1                     u751:
  1529     05A1  2D7D               	goto	l1083
  1530     05A2                     u750:
  1531     05A2                     l1093:
  1532     05A2  0876               	movf	___awdiv@sign,w
  1533     05A3  1903               	btfsc	3,2
  1534     05A4  2DA6               	goto	u761
  1535     05A5  2DA7               	goto	u760
  1536     05A6                     u761:
  1537     05A6  2DAC               	goto	l1097
  1538     05A7                     u760:
  1539     05A7                     l1095:
  1540     05A7  09F7               	comf	___awdiv@quotient,f
  1541     05A8  09F8               	comf	___awdiv@quotient+1,f
  1542     05A9  0AF7               	incf	___awdiv@quotient,f
  1543     05AA  1903               	skipnz
  1544     05AB  0AF8               	incf	___awdiv@quotient+1,f
  1545     05AC                     l1097:
  1546     05AC  0878               	movf	___awdiv@quotient+1,w
  1547     05AD  00F1               	movwf	?___awdiv+1
  1548     05AE  0877               	movf	___awdiv@quotient,w
  1549     05AF  00F0               	movwf	?___awdiv
  1550     05B0                     l442:
  1551     05B0  0008               	return
  1552     05B1                     __end_of___awdiv:
  1553                           
  1554                           	psect	text7
  1555     06C1                     __ptext7:	
  1556 ;; *************** function _DS1307_read *****************
  1557 ;; Defined at:
  1558 ;;		line 207 in file "digitalclock.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  slave_addres    1    wreg     unsigned char 
  1561 ;;  register_add    1    6[COMMON] unsigned char 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  slave_addres    1    7[COMMON] unsigned char 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0, pclath, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         1       0       0       0       0
  1574 ;;      Locals:         1       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0
  1576 ;;      Totals:         2       0       0       0       0
  1577 ;;Total ram usage:        2 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; Hardware stack levels required when called: 2
  1580 ;; This function calls:
  1581 ;;		_bcd_to_ascii
  1582 ;;		_lcd_command
  1583 ;;		_lcd_data
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589     06C1                     _DS1307_read:	
  1590                           ;psect for function _DS1307_read
  1591                           
  1592                           
  1593                           ;incstack = 0
  1594                           ; Regs used in _DS1307_read: [wreg+status,2+status,0+pclath+cstack]
  1595                           ;DS1307_read@slave_address stored from wreg
  1596     06C1  00F7               	movwf	DS1307_read@slave_address
  1597     06C2                     l1211:
  1598                           
  1599                           ;digitalclock.c: 207: void DS1307_read(char slave_address, char register_address);digita
      +                          lclock.c: 208: {;digitalclock.c: 209:     SSPCON2bits.SEN = 1;
  1600     06C2  1683               	bsf	3,5	;RP0=1, select bank1
  1601     06C3  1303               	bcf	3,6	;RP1=0, select bank1
  1602     06C4  1411               	bsf	17,0	;volatile
  1603     06C5                     l125:	
  1604                           ;digitalclock.c: 210:     while(SSPCON2bits.SEN);
  1605                           
  1606     06C5  1811               	btfsc	17,0	;volatile
  1607     06C6  2EC8               	goto	u1051
  1608     06C7  2EC9               	goto	u1050
  1609     06C8                     u1051:
  1610     06C8  2EC5               	goto	l125
  1611     06C9                     u1050:
  1612     06C9                     l127:
  1613                           
  1614                           ;digitalclock.c: 211:     PIR1bits.SSPIF = 0;
  1615     06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1616     06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1617     06CB  118C               	bcf	12,3	;volatile
  1618     06CC                     l1213:
  1619                           
  1620                           ;digitalclock.c: 213:     SSPBUF = slave_address;
  1621     06CC  0877               	movf	DS1307_read@slave_address,w
  1622     06CD  0093               	movwf	19	;volatile
  1623                           
  1624                           ;digitalclock.c: 214:     while(!PIR1bits.SSPIF)
  1625     06CE  2ED0               	goto	l128
  1626     06CF                     l129:
  1627                           
  1628                           ;digitalclock.c: 215:     PIR1bits.SSPIF = 0;
  1629     06CF  118C               	bcf	12,3	;volatile
  1630     06D0                     l128:
  1631                           
  1632                           ;digitalclock.c: 214:     while(!PIR1bits.SSPIF)
  1633     06D0  1D8C               	btfss	12,3	;volatile
  1634     06D1  2ED3               	goto	u1061
  1635     06D2  2ED4               	goto	u1060
  1636     06D3                     u1061:
  1637     06D3  2ECF               	goto	l129
  1638     06D4                     u1060:
  1639     06D4                     l130:
  1640                           
  1641                           ;digitalclock.c: 216:     if(SSPCON2bits.ACKSTAT)
  1642     06D4  1683               	bsf	3,5	;RP0=1, select bank1
  1643     06D5  1303               	bcf	3,6	;RP1=0, select bank1
  1644     06D6  1F11               	btfss	17,6	;volatile
  1645     06D7  2ED9               	goto	u1071
  1646     06D8  2EDA               	goto	u1070
  1647     06D9                     u1071:
  1648     06D9  2EE0               	goto	l1217
  1649     06DA                     u1070:
  1650     06DA                     l1215:
  1651                           
  1652                           ;digitalclock.c: 217:     {;digitalclock.c: 218:         SSPCON2bits.PEN = 1;
  1653     06DA  1511               	bsf	17,2	;volatile
  1654     06DB                     l132:	
  1655                           ;digitalclock.c: 219:          while(SSPCON2bits.PEN );
  1656                           
  1657     06DB  1911               	btfsc	17,2	;volatile
  1658     06DC  2EDE               	goto	u1081
  1659     06DD  2EDF               	goto	u1080
  1660     06DE                     u1081:
  1661     06DE  2EDB               	goto	l132
  1662     06DF                     u1080:
  1663     06DF  2FF1               	goto	l135
  1664     06E0                     l1217:
  1665                           
  1666                           ;digitalclock.c: 223:     SSPBUF = register_address;
  1667     06E0  0876               	movf	DS1307_read@register_address,w
  1668     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1669     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1670     06E3  0093               	movwf	19	;volatile
  1671     06E4                     l136:	
  1672                           ;digitalclock.c: 224:     while(!PIR1bits.SSPIF);
  1673                           
  1674     06E4  1D8C               	btfss	12,3	;volatile
  1675     06E5  2EE7               	goto	u1091
  1676     06E6  2EE8               	goto	u1090
  1677     06E7                     u1091:
  1678     06E7  2EE4               	goto	l136
  1679     06E8                     u1090:
  1680     06E8                     l138:
  1681                           
  1682                           ;digitalclock.c: 225:     PIR1bits.SSPIF = 0;
  1683     06E8  118C               	bcf	12,3	;volatile
  1684                           
  1685                           ;digitalclock.c: 226:     if(SSPCON2bits.ACKSTAT)
  1686     06E9  1683               	bsf	3,5	;RP0=1, select bank1
  1687     06EA  1303               	bcf	3,6	;RP1=0, select bank1
  1688     06EB  1F11               	btfss	17,6	;volatile
  1689     06EC  2EEE               	goto	u1101
  1690     06ED  2EEF               	goto	u1100
  1691     06EE                     u1101:
  1692     06EE  2EF5               	goto	l139
  1693     06EF                     u1100:
  1694     06EF                     l1219:
  1695                           
  1696                           ;digitalclock.c: 227:     {;digitalclock.c: 228:         SSPCON2bits.PEN = 1;
  1697     06EF  1511               	bsf	17,2	;volatile
  1698     06F0                     l140:	
  1699                           ;digitalclock.c: 229:           while(SSPCON2bits.PEN );
  1700                           
  1701     06F0  1911               	btfsc	17,2	;volatile
  1702     06F1  2EF3               	goto	u1111
  1703     06F2  2EF4               	goto	u1110
  1704     06F3                     u1111:
  1705     06F3  2EF0               	goto	l140
  1706     06F4                     u1110:
  1707     06F4  2FF1               	goto	l135
  1708     06F5                     l139:	
  1709                           ;digitalclock.c: 231:     }
  1710                           
  1711                           
  1712                           ;digitalclock.c: 233:     SSPCON2bits.RSEN = 1;
  1713     06F5  1491               	bsf	17,1	;volatile
  1714     06F6                     l143:	
  1715                           ;digitalclock.c: 234:     while(SSPCON2bits.RSEN);
  1716                           
  1717     06F6  1891               	btfsc	17,1	;volatile
  1718     06F7  2EF9               	goto	u1121
  1719     06F8  2EFA               	goto	u1120
  1720     06F9                     u1121:
  1721     06F9  2EF6               	goto	l143
  1722     06FA                     u1120:
  1723     06FA                     l145:
  1724                           
  1725                           ;digitalclock.c: 235:     PIR1bits.SSPIF = 0;
  1726     06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1727     06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1728     06FC  118C               	bcf	12,3	;volatile
  1729     06FD                     l1221:
  1730                           
  1731                           ;digitalclock.c: 237:     SSPBUF = (slave_address + 1);
  1732     06FD  0877               	movf	DS1307_read@slave_address,w
  1733     06FE  3E01               	addlw	1
  1734     06FF  0093               	movwf	19	;volatile
  1735     0700                     l146:	
  1736                           ;digitalclock.c: 238:     while(!PIR1bits.SSPIF);
  1737                           
  1738     0700  1D8C               	btfss	12,3	;volatile
  1739     0701  2F03               	goto	u1131
  1740     0702  2F04               	goto	u1130
  1741     0703                     u1131:
  1742     0703  2F00               	goto	l146
  1743     0704                     u1130:
  1744     0704                     l148:
  1745                           
  1746                           ;digitalclock.c: 239:     PIR1bits.SSPIF = 0;
  1747     0704  118C               	bcf	12,3	;volatile
  1748                           
  1749                           ;digitalclock.c: 240:     if(SSPCON2bits.ACKSTAT)
  1750     0705  1683               	bsf	3,5	;RP0=1, select bank1
  1751     0706  1303               	bcf	3,6	;RP1=0, select bank1
  1752     0707  1F11               	btfss	17,6	;volatile
  1753     0708  2F0A               	goto	u1141
  1754     0709  2F0B               	goto	u1140
  1755     070A                     u1141:
  1756     070A  2F11               	goto	l149
  1757     070B                     u1140:
  1758     070B                     l1223:
  1759                           
  1760                           ;digitalclock.c: 241:     {;digitalclock.c: 242:         SSPCON2bits.PEN = 1;
  1761     070B  1511               	bsf	17,2	;volatile
  1762     070C                     l150:	
  1763                           ;digitalclock.c: 243:          while(SSPCON2bits.PEN );
  1764                           
  1765     070C  1911               	btfsc	17,2	;volatile
  1766     070D  2F0F               	goto	u1151
  1767     070E  2F10               	goto	u1150
  1768     070F                     u1151:
  1769     070F  2F0C               	goto	l150
  1770     0710                     u1150:
  1771     0710  2FF1               	goto	l135
  1772     0711                     l149:	
  1773                           ;digitalclock.c: 245:     }
  1774                           
  1775                           
  1776                           ;digitalclock.c: 247:     SSPCON2bits.RCEN = 1;
  1777     0711  1591               	bsf	17,3	;volatile
  1778     0712                     l153:	
  1779                           ;digitalclock.c: 248:     while(!SSPSTATbits.BF);
  1780                           
  1781     0712  1C14               	btfss	20,0	;volatile
  1782     0713  2F15               	goto	u1161
  1783     0714  2F16               	goto	u1160
  1784     0715                     u1161:
  1785     0715  2F12               	goto	l153
  1786     0716                     u1160:
  1787     0716                     l1225:
  1788                           
  1789                           ;digitalclock.c: 249:     __sec = SSPBUF;
  1790     0716  1283               	bcf	3,5	;RP0=0, select bank0
  1791     0717  1303               	bcf	3,6	;RP1=0, select bank0
  1792     0718  0813               	movf	19,w	;volatile
  1793     0719  00FD               	movwf	___sec
  1794     071A                     l1227:
  1795                           
  1796                           ;digitalclock.c: 251:     SSPCON2bits.ACKDT = 0;
  1797     071A  1683               	bsf	3,5	;RP0=1, select bank1
  1798     071B  1303               	bcf	3,6	;RP1=0, select bank1
  1799     071C  1291               	bcf	17,5	;volatile
  1800     071D                     l1229:
  1801                           
  1802                           ;digitalclock.c: 252:     SSPCON2bits.ACKEN = 1;
  1803     071D  1611               	bsf	17,4	;volatile
  1804     071E                     l156:	
  1805                           ;digitalclock.c: 253:     while(SSPCON2bits.ACKEN);
  1806                           
  1807     071E  1A11               	btfsc	17,4	;volatile
  1808     071F  2F21               	goto	u1171
  1809     0720  2F22               	goto	u1170
  1810     0721                     u1171:
  1811     0721  2F1E               	goto	l156
  1812     0722                     u1170:
  1813     0722                     l158:
  1814                           
  1815                           ;digitalclock.c: 255:     SSPCON2bits.RCEN = 1;
  1816     0722  1591               	bsf	17,3	;volatile
  1817     0723                     l159:	
  1818                           ;digitalclock.c: 256:     while(!SSPSTATbits.BF);
  1819                           
  1820     0723  1C14               	btfss	20,0	;volatile
  1821     0724  2F26               	goto	u1181
  1822     0725  2F27               	goto	u1180
  1823     0726                     u1181:
  1824     0726  2F23               	goto	l159
  1825     0727                     u1180:
  1826     0727                     l1231:
  1827                           
  1828                           ;digitalclock.c: 257:     __min = SSPBUF;
  1829     0727  1283               	bcf	3,5	;RP0=0, select bank0
  1830     0728  1303               	bcf	3,6	;RP1=0, select bank0
  1831     0729  0813               	movf	19,w	;volatile
  1832     072A  00FC               	movwf	___min
  1833     072B                     l1233:
  1834                           
  1835                           ;digitalclock.c: 259:     SSPCON2bits.ACKDT = 0;
  1836     072B  1683               	bsf	3,5	;RP0=1, select bank1
  1837     072C  1303               	bcf	3,6	;RP1=0, select bank1
  1838     072D  1291               	bcf	17,5	;volatile
  1839     072E                     l1235:
  1840                           
  1841                           ;digitalclock.c: 260:     SSPCON2bits.ACKEN = 1;
  1842     072E  1611               	bsf	17,4	;volatile
  1843     072F                     l162:	
  1844                           ;digitalclock.c: 261:     while(SSPCON2bits.ACKEN);
  1845                           
  1846     072F  1A11               	btfsc	17,4	;volatile
  1847     0730  2F32               	goto	u1191
  1848     0731  2F33               	goto	u1190
  1849     0732                     u1191:
  1850     0732  2F2F               	goto	l162
  1851     0733                     u1190:
  1852     0733                     l164:
  1853                           
  1854                           ;digitalclock.c: 263:     SSPCON2bits.RCEN = 1;
  1855     0733  1591               	bsf	17,3	;volatile
  1856     0734                     l165:	
  1857                           ;digitalclock.c: 264:     while(!SSPSTATbits.BF);
  1858                           
  1859     0734  1C14               	btfss	20,0	;volatile
  1860     0735  2F37               	goto	u1201
  1861     0736  2F38               	goto	u1200
  1862     0737                     u1201:
  1863     0737  2F34               	goto	l165
  1864     0738                     u1200:
  1865     0738                     l1237:
  1866                           
  1867                           ;digitalclock.c: 265:     __hr = SSPBUF;
  1868     0738  1283               	bcf	3,5	;RP0=0, select bank0
  1869     0739  1303               	bcf	3,6	;RP1=0, select bank0
  1870     073A  0813               	movf	19,w	;volatile
  1871     073B  00B2               	movwf	___hr
  1872     073C                     l1239:
  1873                           
  1874                           ;digitalclock.c: 267:     SSPCON2bits.ACKDT = 0;
  1875     073C  1683               	bsf	3,5	;RP0=1, select bank1
  1876     073D  1303               	bcf	3,6	;RP1=0, select bank1
  1877     073E  1291               	bcf	17,5	;volatile
  1878     073F                     l1241:
  1879                           
  1880                           ;digitalclock.c: 268:     SSPCON2bits.ACKEN = 1;
  1881     073F  1611               	bsf	17,4	;volatile
  1882     0740                     l168:	
  1883                           ;digitalclock.c: 269:     while(SSPCON2bits.ACKEN);
  1884                           
  1885     0740  1A11               	btfsc	17,4	;volatile
  1886     0741  2F43               	goto	u1211
  1887     0742  2F44               	goto	u1210
  1888     0743                     u1211:
  1889     0743  2F40               	goto	l168
  1890     0744                     u1210:
  1891     0744                     l170:
  1892                           
  1893                           ;digitalclock.c: 271:     SSPCON2bits.RCEN = 1;
  1894     0744  1591               	bsf	17,3	;volatile
  1895     0745                     l171:	
  1896                           ;digitalclock.c: 272:     while(!SSPSTATbits.BF);
  1897                           
  1898     0745  1C14               	btfss	20,0	;volatile
  1899     0746  2F48               	goto	u1221
  1900     0747  2F49               	goto	u1220
  1901     0748                     u1221:
  1902     0748  2F45               	goto	l171
  1903     0749                     u1220:
  1904     0749                     l1243:
  1905                           
  1906                           ;digitalclock.c: 273:     __day = SSPBUF;
  1907     0749  1283               	bcf	3,5	;RP0=0, select bank0
  1908     074A  1303               	bcf	3,6	;RP1=0, select bank0
  1909     074B  0813               	movf	19,w	;volatile
  1910     074C  00B1               	movwf	___day
  1911     074D                     l1245:
  1912                           
  1913                           ;digitalclock.c: 275:     SSPCON2bits.ACKDT = 0;
  1914     074D  1683               	bsf	3,5	;RP0=1, select bank1
  1915     074E  1303               	bcf	3,6	;RP1=0, select bank1
  1916     074F  1291               	bcf	17,5	;volatile
  1917     0750                     l1247:
  1918                           
  1919                           ;digitalclock.c: 276:     SSPCON2bits.ACKEN = 1;
  1920     0750  1611               	bsf	17,4	;volatile
  1921     0751                     l174:	
  1922                           ;digitalclock.c: 277:     while(SSPCON2bits.ACKEN);
  1923                           
  1924     0751  1A11               	btfsc	17,4	;volatile
  1925     0752  2F54               	goto	u1231
  1926     0753  2F55               	goto	u1230
  1927     0754                     u1231:
  1928     0754  2F51               	goto	l174
  1929     0755                     u1230:
  1930     0755                     l176:
  1931                           
  1932                           ;digitalclock.c: 279:     SSPCON2bits.RCEN = 1;
  1933     0755  1591               	bsf	17,3	;volatile
  1934     0756                     l177:	
  1935                           ;digitalclock.c: 280:     while(!SSPSTATbits.BF);
  1936                           
  1937     0756  1C14               	btfss	20,0	;volatile
  1938     0757  2F59               	goto	u1241
  1939     0758  2F5A               	goto	u1240
  1940     0759                     u1241:
  1941     0759  2F56               	goto	l177
  1942     075A                     u1240:
  1943     075A                     l1249:
  1944                           
  1945                           ;digitalclock.c: 281:     __date = SSPBUF;
  1946     075A  1283               	bcf	3,5	;RP0=0, select bank0
  1947     075B  1303               	bcf	3,6	;RP1=0, select bank0
  1948     075C  0813               	movf	19,w	;volatile
  1949     075D  00B0               	movwf	___date
  1950     075E                     l1251:
  1951                           
  1952                           ;digitalclock.c: 283:     SSPCON2bits.ACKDT = 0;
  1953     075E  1683               	bsf	3,5	;RP0=1, select bank1
  1954     075F  1303               	bcf	3,6	;RP1=0, select bank1
  1955     0760  1291               	bcf	17,5	;volatile
  1956     0761                     l1253:
  1957                           
  1958                           ;digitalclock.c: 284:     SSPCON2bits.ACKEN = 1;
  1959     0761  1611               	bsf	17,4	;volatile
  1960     0762                     l180:	
  1961                           ;digitalclock.c: 285:     while(SSPCON2bits.ACKEN);
  1962                           
  1963     0762  1A11               	btfsc	17,4	;volatile
  1964     0763  2F65               	goto	u1251
  1965     0764  2F66               	goto	u1250
  1966     0765                     u1251:
  1967     0765  2F62               	goto	l180
  1968     0766                     u1250:
  1969     0766                     l182:
  1970                           
  1971                           ;digitalclock.c: 287:     SSPCON2bits.RCEN = 1;
  1972     0766  1591               	bsf	17,3	;volatile
  1973     0767                     l183:	
  1974                           ;digitalclock.c: 288:     while(!SSPSTATbits.BF);
  1975                           
  1976     0767  1C14               	btfss	20,0	;volatile
  1977     0768  2F6A               	goto	u1261
  1978     0769  2F6B               	goto	u1260
  1979     076A                     u1261:
  1980     076A  2F67               	goto	l183
  1981     076B                     u1260:
  1982     076B                     l1255:
  1983                           
  1984                           ;digitalclock.c: 289:     __month = SSPBUF;
  1985     076B  1283               	bcf	3,5	;RP0=0, select bank0
  1986     076C  1303               	bcf	3,6	;RP1=0, select bank0
  1987     076D  0813               	movf	19,w	;volatile
  1988     076E  00AF               	movwf	___month
  1989     076F                     l1257:
  1990                           
  1991                           ;digitalclock.c: 291:     SSPCON2bits.ACKDT = 0;
  1992     076F  1683               	bsf	3,5	;RP0=1, select bank1
  1993     0770  1303               	bcf	3,6	;RP1=0, select bank1
  1994     0771  1291               	bcf	17,5	;volatile
  1995     0772                     l1259:
  1996                           
  1997                           ;digitalclock.c: 292:     SSPCON2bits.ACKEN = 1;
  1998     0772  1611               	bsf	17,4	;volatile
  1999     0773                     l186:	
  2000                           ;digitalclock.c: 293:     while(SSPCON2bits.ACKEN);
  2001                           
  2002     0773  1A11               	btfsc	17,4	;volatile
  2003     0774  2F76               	goto	u1271
  2004     0775  2F77               	goto	u1270
  2005     0776                     u1271:
  2006     0776  2F73               	goto	l186
  2007     0777                     u1270:
  2008     0777                     l188:
  2009                           
  2010                           ;digitalclock.c: 295:     SSPCON2bits.RCEN = 1;
  2011     0777  1591               	bsf	17,3	;volatile
  2012     0778                     l189:	
  2013                           ;digitalclock.c: 296:     while(!SSPSTATbits.BF);
  2014                           
  2015     0778  1C14               	btfss	20,0	;volatile
  2016     0779  2F7B               	goto	u1281
  2017     077A  2F7C               	goto	u1280
  2018     077B                     u1281:
  2019     077B  2F78               	goto	l189
  2020     077C                     u1280:
  2021     077C                     l1261:
  2022                           
  2023                           ;digitalclock.c: 297:     __yr = SSPBUF;
  2024     077C  1283               	bcf	3,5	;RP0=0, select bank0
  2025     077D  1303               	bcf	3,6	;RP1=0, select bank0
  2026     077E  0813               	movf	19,w	;volatile
  2027     077F  00AE               	movwf	___yr
  2028     0780                     l1263:
  2029                           
  2030                           ;digitalclock.c: 299:     SSPCON2bits.ACKDT = 0;
  2031     0780  1683               	bsf	3,5	;RP0=1, select bank1
  2032     0781  1303               	bcf	3,6	;RP1=0, select bank1
  2033     0782  1291               	bcf	17,5	;volatile
  2034     0783                     l1265:
  2035                           
  2036                           ;digitalclock.c: 300:     SSPCON2bits.ACKEN = 1;
  2037     0783  1611               	bsf	17,4	;volatile
  2038     0784                     l192:	
  2039                           ;digitalclock.c: 301:     while(SSPCON2bits.ACKEN);
  2040                           
  2041     0784  1A11               	btfsc	17,4	;volatile
  2042     0785  2F87               	goto	u1291
  2043     0786  2F88               	goto	u1290
  2044     0787                     u1291:
  2045     0787  2F84               	goto	l192
  2046     0788                     u1290:
  2047     0788                     l194:
  2048                           
  2049                           ;digitalclock.c: 303:     SSPCON2bits.RCEN = 1;
  2050     0788  1591               	bsf	17,3	;volatile
  2051     0789                     l195:	
  2052                           ;digitalclock.c: 304:     while(!SSPSTATbits.BF);
  2053                           
  2054     0789  1C14               	btfss	20,0	;volatile
  2055     078A  2F8C               	goto	u1301
  2056     078B  2F8D               	goto	u1300
  2057     078C                     u1301:
  2058     078C  2F89               	goto	l195
  2059     078D                     u1300:
  2060     078D                     l1267:
  2061                           
  2062                           ;digitalclock.c: 305:     __con = SSPBUF;
  2063     078D  1283               	bcf	3,5	;RP0=0, select bank0
  2064     078E  1303               	bcf	3,6	;RP1=0, select bank0
  2065     078F  0813               	movf	19,w	;volatile
  2066     0790  00AD               	movwf	___con
  2067     0791                     l1269:
  2068                           
  2069                           ;digitalclock.c: 307:     SSPCON2bits.ACKDT = 1;
  2070     0791  1683               	bsf	3,5	;RP0=1, select bank1
  2071     0792  1303               	bcf	3,6	;RP1=0, select bank1
  2072     0793  1691               	bsf	17,5	;volatile
  2073     0794                     l1271:
  2074                           
  2075                           ;digitalclock.c: 308:     SSPCON2bits.ACKEN = 1;
  2076     0794  1611               	bsf	17,4	;volatile
  2077     0795                     l198:	
  2078                           ;digitalclock.c: 309:     while(SSPCON2bits.ACKEN);
  2079                           
  2080     0795  1A11               	btfsc	17,4	;volatile
  2081     0796  2F98               	goto	u1311
  2082     0797  2F99               	goto	u1310
  2083     0798                     u1311:
  2084     0798  2F95               	goto	l198
  2085     0799                     u1310:
  2086     0799                     l200:
  2087                           
  2088                           ;digitalclock.c: 311:     SSPCON2bits.PEN = 1;
  2089     0799  1511               	bsf	17,2	;volatile
  2090     079A                     l201:	
  2091                           ;digitalclock.c: 312:     while(SSPCON2bits.PEN);
  2092                           
  2093     079A  1911               	btfsc	17,2	;volatile
  2094     079B  2F9D               	goto	u1321
  2095     079C  2F9E               	goto	u1320
  2096     079D                     u1321:
  2097     079D  2F9A               	goto	l201
  2098     079E                     u1320:
  2099     079E                     l203:
  2100                           
  2101                           ;digitalclock.c: 313:     PIR1bits.SSPIF=0;
  2102     079E  1283               	bcf	3,5	;RP0=0, select bank0
  2103     079F  1303               	bcf	3,6	;RP1=0, select bank0
  2104     07A0  118C               	bcf	12,3	;volatile
  2105     07A1                     l1273:
  2106                           
  2107                           ;digitalclock.c: 315:     lcd_command(0x88);
  2108     07A1  3088               	movlw	136
  2109     07A2  120A  118A  2448  120A  118A  	fcall	_lcd_command
  2110                           
  2111                           ;digitalclock.c: 316:     bcd_to_ascii(__hr);
  2112     07A7  1283               	bcf	3,5	;RP0=0, select bank0
  2113     07A8  1303               	bcf	3,6	;RP1=0, select bank0
  2114     07A9  0832               	movf	___hr,w
  2115     07AA  120A  118A  2491  120A  118A  	fcall	_bcd_to_ascii
  2116                           
  2117                           ;digitalclock.c: 317:     lcd_data(':');
  2118     07AF  303A               	movlw	58
  2119     07B0  120A  118A  2433  120A  118A  	fcall	_lcd_data
  2120                           
  2121                           ;digitalclock.c: 318:     bcd_to_ascii(__min);
  2122     07B5  087C               	movf	___min,w
  2123     07B6  120A  118A  2491  120A  118A  	fcall	_bcd_to_ascii
  2124                           
  2125                           ;digitalclock.c: 319:     lcd_data(':');
  2126     07BB  303A               	movlw	58
  2127     07BC  120A  118A  2433  120A  118A  	fcall	_lcd_data
  2128                           
  2129                           ;digitalclock.c: 320:     bcd_to_ascii(__sec);
  2130     07C1  087D               	movf	___sec,w
  2131     07C2  120A  118A  2491  120A  118A  	fcall	_bcd_to_ascii
  2132                           
  2133                           ;digitalclock.c: 321:     lcd_command(0xc7);
  2134     07C7  30C7               	movlw	199
  2135     07C8  120A  118A  2448  120A  118A  	fcall	_lcd_command
  2136                           
  2137                           ;digitalclock.c: 322:     bcd_to_ascii(__date);
  2138     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  2139     07CE  1303               	bcf	3,6	;RP1=0, select bank0
  2140     07CF  0830               	movf	___date,w
  2141     07D0  120A  118A  2491  120A  118A  	fcall	_bcd_to_ascii
  2142                           
  2143                           ;digitalclock.c: 323:     lcd_data('/');
  2144     07D5  302F               	movlw	47
  2145     07D6  120A  118A  2433  120A  118A  	fcall	_lcd_data
  2146                           
  2147                           ;digitalclock.c: 324:     bcd_to_ascii(__month);
  2148     07DB  1283               	bcf	3,5	;RP0=0, select bank0
  2149     07DC  1303               	bcf	3,6	;RP1=0, select bank0
  2150     07DD  082F               	movf	___month,w
  2151     07DE  120A  118A  2491  120A  118A  	fcall	_bcd_to_ascii
  2152                           
  2153                           ;digitalclock.c: 325:     lcd_data('/');
  2154     07E3  302F               	movlw	47
  2155     07E4  120A  118A  2433  120A  118A  	fcall	_lcd_data
  2156                           
  2157                           ;digitalclock.c: 326:     bcd_to_ascii(__yr);
  2158     07E9  1283               	bcf	3,5	;RP0=0, select bank0
  2159     07EA  1303               	bcf	3,6	;RP1=0, select bank0
  2160     07EB  082E               	movf	___yr,w
  2161     07EC  120A  118A  2491  120A  118A  	fcall	_bcd_to_ascii
  2162     07F1                     l135:
  2163     07F1  0008               	return
  2164     07F2                     __end_of_DS1307_read:
  2165                           
  2166                           	psect	text8
  2167     0448                     __ptext8:	
  2168 ;; *************** function _lcd_command *****************
  2169 ;; Defined at:
  2170 ;;		line 50 in file "digitalclock.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  cmd             1    wreg     unsigned char 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  cmd             1    2[COMMON] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         0       0       0       0       0
  2185 ;;      Locals:         1       0       0       0       0
  2186 ;;      Temps:          2       0       0       0       0
  2187 ;;      Totals:         3       0       0       0       0
  2188 ;;Total ram usage:        3 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_lcd_initialise
  2194 ;;		_main
  2195 ;;		_DS1307_read
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199     0448                     _lcd_command:	
  2200                           ;psect for function _lcd_command
  2201                           
  2202                           
  2203                           ;incstack = 0
  2204                           ; Regs used in _lcd_command: [wreg]
  2205                           ;lcd_command@cmd stored from wreg
  2206     0448  00F2               	movwf	lcd_command@cmd
  2207     0449                     l1139:
  2208                           
  2209                           ;digitalclock.c: 50: void lcd_command(unsigned char cmd);digitalclock.c: 51: {;digitalcl
      +                          ock.c: 52:     PORTD=cmd;
  2210     0449  0872               	movf	lcd_command@cmd,w
  2211     044A  1283               	bcf	3,5	;RP0=0, select bank0
  2212     044B  1303               	bcf	3,6	;RP1=0, select bank0
  2213     044C  0088               	movwf	8	;volatile
  2214     044D                     l1141:
  2215                           
  2216                           ;digitalclock.c: 53:     PORTBbits.RB0=0;
  2217     044D  1006               	bcf	6,0	;volatile
  2218     044E                     l1143:
  2219                           
  2220                           ;digitalclock.c: 54:     PORTBbits.RB1=0;
  2221     044E  1086               	bcf	6,1	;volatile
  2222     044F                     l1145:
  2223                           
  2224                           ;digitalclock.c: 55:     PORTBbits.RB2=1;
  2225     044F  1506               	bsf	6,2	;volatile
  2226                           
  2227                           ;digitalclock.c: 56:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2228     0450  3021               	movlw	33
  2229     0451  00F1               	movwf	??_lcd_command+1
  2230     0452  3076               	movlw	118
  2231     0453  00F0               	movwf	??_lcd_command
  2232     0454                     u1357:
  2233     0454  0BF0               	decfsz	??_lcd_command,f
  2234     0455  2C54               	goto	u1357
  2235     0456  0BF1               	decfsz	??_lcd_command+1,f
  2236     0457  2C54               	goto	u1357
  2237     0458  0000               	nop
  2238     0459                     l1147:
  2239                           
  2240                           ;digitalclock.c: 57:     PORTBbits.RB2=0;
  2241     0459  1283               	bcf	3,5	;RP0=0, select bank0
  2242     045A  1303               	bcf	3,6	;RP1=0, select bank0
  2243     045B  1106               	bcf	6,2	;volatile
  2244     045C                     l33:
  2245     045C  0008               	return
  2246     045D                     __end_of_lcd_command:
  2247                           
  2248                           	psect	text9
  2249     0491                     __ptext9:	
  2250 ;; *************** function _bcd_to_ascii *****************
  2251 ;; Defined at:
  2252 ;;		line 119 in file "digitalclock.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  value           1    wreg     unsigned char 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  value           1    4[COMMON] unsigned char 
  2257 ;;  bcd             1    5[COMMON] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2267 ;;      Params:         0       0       0       0       0
  2268 ;;      Locals:         2       0       0       0       0
  2269 ;;      Temps:          1       0       0       0       0
  2270 ;;      Totals:         3       0       0       0       0
  2271 ;;Total ram usage:        3 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 1
  2274 ;; This function calls:
  2275 ;;		_lcd_data
  2276 ;; This function is called by:
  2277 ;;		_DS1307_read
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281     0491                     _bcd_to_ascii:	
  2282                           ;psect for function _bcd_to_ascii
  2283                           
  2284                           
  2285                           ;incstack = 0
  2286                           ; Regs used in _bcd_to_ascii: [wreg+status,2+status,0+pclath+cstack]
  2287                           ;bcd_to_ascii@value stored from wreg
  2288     0491  00F4               	movwf	bcd_to_ascii@value
  2289     0492                     l1149:
  2290                           
  2291                           ;digitalclock.c: 119: void bcd_to_ascii(unsigned char value);digitalclock.c: 120: {;digi
      +                          talclock.c: 121:     unsigned char bcd;;digitalclock.c: 122:     bcd = value;
  2292     0492  0874               	movf	bcd_to_ascii@value,w
  2293     0493  00F5               	movwf	bcd_to_ascii@bcd
  2294     0494                     l1151:
  2295                           
  2296                           ;digitalclock.c: 123:     bcd = (bcd&(0xf0));
  2297     0494  0875               	movf	bcd_to_ascii@bcd,w
  2298     0495  39F0               	andlw	240
  2299     0496  00F5               	movwf	bcd_to_ascii@bcd
  2300     0497                     l1153:
  2301                           
  2302                           ;digitalclock.c: 124:     bcd = (bcd>>4);
  2303     0497  0875               	movf	bcd_to_ascii@bcd,w
  2304     0498  00F3               	movwf	??_bcd_to_ascii
  2305     0499  3004               	movlw	4
  2306     049A                     u865:
  2307     049A  1003               	clrc
  2308     049B  0CF3               	rrf	??_bcd_to_ascii,f
  2309     049C  3EFF               	addlw	-1
  2310     049D  1D03               	skipz
  2311     049E  2C9A               	goto	u865
  2312     049F  0873               	movf	??_bcd_to_ascii,w
  2313     04A0  00F5               	movwf	bcd_to_ascii@bcd
  2314     04A1                     l1155:
  2315                           
  2316                           ;digitalclock.c: 125:     bcd = (bcd|(0x30));
  2317     04A1  0875               	movf	bcd_to_ascii@bcd,w
  2318     04A2  3830               	iorlw	48
  2319     04A3  00F5               	movwf	bcd_to_ascii@bcd
  2320     04A4                     l1157:
  2321                           
  2322                           ;digitalclock.c: 126:     lcd_data(bcd);
  2323     04A4  0875               	movf	bcd_to_ascii@bcd,w
  2324     04A5  120A  118A  2433  120A  118A  	fcall	_lcd_data
  2325     04AA                     l1159:
  2326                           
  2327                           ;digitalclock.c: 128:     bcd = value;
  2328     04AA  0874               	movf	bcd_to_ascii@value,w
  2329     04AB  00F5               	movwf	bcd_to_ascii@bcd
  2330     04AC                     l1161:
  2331                           
  2332                           ;digitalclock.c: 129:     bcd = (bcd&(0x0f));
  2333     04AC  0875               	movf	bcd_to_ascii@bcd,w
  2334     04AD  390F               	andlw	15
  2335     04AE  00F5               	movwf	bcd_to_ascii@bcd
  2336     04AF                     l1163:
  2337                           
  2338                           ;digitalclock.c: 130:     bcd = (bcd|(0x30));
  2339     04AF  0875               	movf	bcd_to_ascii@bcd,w
  2340     04B0  3830               	iorlw	48
  2341     04B1  00F5               	movwf	bcd_to_ascii@bcd
  2342     04B2                     l1165:
  2343                           
  2344                           ;digitalclock.c: 131:     lcd_data(bcd);
  2345     04B2  0875               	movf	bcd_to_ascii@bcd,w
  2346     04B3  120A  118A  2433  120A  118A  	fcall	_lcd_data
  2347     04B8                     l72:
  2348     04B8  0008               	return
  2349     04B9                     __end_of_bcd_to_ascii:
  2350                           
  2351                           	psect	text10
  2352     0433                     __ptext10:	
  2353 ;; *************** function _lcd_data *****************
  2354 ;; Defined at:
  2355 ;;		line 60 in file "digitalclock.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  data            1    wreg     unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  data            1    2[COMMON] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       0       0       0
  2370 ;;      Locals:         1       0       0       0       0
  2371 ;;      Temps:          2       0       0       0       0
  2372 ;;      Totals:         3       0       0       0       0
  2373 ;;Total ram usage:        3 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_lcd_string
  2379 ;;		_bcd_to_ascii
  2380 ;;		_DS1307_read
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384     0433                     _lcd_data:	
  2385                           ;psect for function _lcd_data
  2386                           
  2387                           
  2388                           ;incstack = 0
  2389                           ; Regs used in _lcd_data: [wreg]
  2390                           ;lcd_data@data stored from wreg
  2391     0433  00F2               	movwf	lcd_data@data
  2392     0434                     l1047:
  2393                           
  2394                           ;digitalclock.c: 60: void lcd_data(unsigned char data);digitalclock.c: 61: {;digitalcloc
      +                          k.c: 62:     PORTD=data;
  2395     0434  0872               	movf	lcd_data@data,w
  2396     0435  1283               	bcf	3,5	;RP0=0, select bank0
  2397     0436  1303               	bcf	3,6	;RP1=0, select bank0
  2398     0437  0088               	movwf	8	;volatile
  2399     0438                     l1049:
  2400                           
  2401                           ;digitalclock.c: 63:     PORTBbits.RB0=1;
  2402     0438  1406               	bsf	6,0	;volatile
  2403     0439                     l1051:
  2404                           
  2405                           ;digitalclock.c: 64:     PORTBbits.RB1=0;
  2406     0439  1086               	bcf	6,1	;volatile
  2407     043A                     l1053:
  2408                           
  2409                           ;digitalclock.c: 65:     PORTBbits.RB2=1;
  2410     043A  1506               	bsf	6,2	;volatile
  2411                           
  2412                           ;digitalclock.c: 66:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2413     043B  3021               	movlw	33
  2414     043C  00F1               	movwf	??_lcd_data+1
  2415     043D  3076               	movlw	118
  2416     043E  00F0               	movwf	??_lcd_data
  2417     043F                     u1367:
  2418     043F  0BF0               	decfsz	??_lcd_data,f
  2419     0440  2C3F               	goto	u1367
  2420     0441  0BF1               	decfsz	??_lcd_data+1,f
  2421     0442  2C3F               	goto	u1367
  2422     0443  0000               	nop
  2423     0444                     l1055:
  2424                           
  2425                           ;digitalclock.c: 67:     PORTBbits.RB2=0;
  2426     0444  1283               	bcf	3,5	;RP0=0, select bank0
  2427     0445  1303               	bcf	3,6	;RP1=0, select bank0
  2428     0446  1106               	bcf	6,2	;volatile
  2429     0447                     l36:
  2430     0447  0008               	return
  2431     0448                     __end_of_lcd_data:
  2432     007E                     btemp	set	126	;btemp
  2433     007E                     wtemp0	set	126
  2434                           
  2435                           	psect	idloc
  2436                           
  2437                           ;Config register IDLOC0 @ 0x2000
  2438                           ;	unspecified, using default values
  2439     2000                     	org	8192
  2440     2000  3FFF               	dw	16383
  2441                           
  2442                           ;Config register IDLOC1 @ 0x2001
  2443                           ;	unspecified, using default values
  2444     2001                     	org	8193
  2445     2001  3FFF               	dw	16383
  2446                           
  2447                           ;Config register IDLOC2 @ 0x2002
  2448                           ;	unspecified, using default values
  2449     2002                     	org	8194
  2450     2002  3FFF               	dw	16383
  2451                           
  2452                           ;Config register IDLOC3 @ 0x2003
  2453                           ;	unspecified, using default values
  2454     2003                     	org	8195
  2455     2003  3FFF               	dw	16383
  2456                           
  2457                           	psect	config
  2458                           
  2459                           ;Config register CONFIG @ 0x2007
  2460                           ;	Oscillator Selection bits
  2461                           ;	FOSC = HS, HS oscillator
  2462                           ;	Watchdog Timer Enable bit
  2463                           ;	WDTE = OFF, WDT disabled
  2464                           ;	Power-up Timer Enable bit
  2465                           ;	PWRTE = OFF, PWRT disabled
  2466                           ;	Brown-out Reset Enable bit
  2467                           ;	BOREN = OFF, BOR disabled
  2468                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2469                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2470                           ;	Data EEPROM Memory Code Protection bit
  2471                           ;	CPD = OFF, Data EEPROM code protection off
  2472                           ;	Flash Program Memory Write Enable bits
  2473                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2474                           ;	In-Circuit Debugger Mode bit
  2475                           ;	DEBUG = 0x1, unprogrammed default
  2476                           ;	Flash Program Memory Code Protection bit
  2477                           ;	CP = OFF, Code protection off
  2478     2007                     	org	8199
  2479     2007  3F3A               	dw	16186

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     13      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_2(CODE[6]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_DS1307_write
    _lcd_string->_lcd_data
    _lcd_initialise->_lcd_command
    _DS1307_write->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _DS1307_read->_bcd_to_ascii
    _bcd_to_ascii->_lcd_data

Critical Paths under _main in BANK0

    _main->_DS1307_write
    _DS1307_write->_decimal_to_bcd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2410
                                             10 BANK0      3     3      0
                        _DS1307_read
                       _DS1307_write
                        _lcd_command
                     _lcd_initialise
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     3      1     330
                                              3 COMMON     4     3      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       0     0      0      22
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _DS1307_write                                         7     1      6    1623
                                             11 COMMON     1     1      0
                                              4 BANK0      6     0      6
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       6     6      0    1013
                                              9 COMMON     2     2      0
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _DS1307_read                                          2     1      1     413
                                              6 COMMON     2     1      1
                       _bcd_to_ascii
                        _lcd_command
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _bcd_to_ascii                                         3     3      0     227
                                              3 COMMON     3     3      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307_read
     _bcd_to_ascii
       _lcd_data
     _lcd_command
     _lcd_data
   _DS1307_write
     _decimal_to_bcd
       ___awdiv
       ___awmod
   _lcd_command
   _lcd_initialise
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 28 14:17:01 2024

                          pc 0002                 lcd_data@data 0072                  _SSPSTATbits 0094  
                         l33 045C                           l36 0447                           l45 0490  
                         l39 0475                           l72 04B8                           l80 0627  
                         l81 062C                           l66 060A                           l75 04F0  
                         l91 0644                           l83 0630                           l93 064C  
                         l85 0638                           l78 0623                           l96 065A  
                         l88 06C0                           l89 0640                           l98 065E  
                         l99 0668                 ___awdiv@sign 0076                           fsr 0004  
             _decimal_to_bcd 04B9                          l101 066C                          l110 0696  
                        l102 0676                          l111 06A0                          l200 0799  
                        l120 06BC                          l104 067A                          l201 079A  
                        l113 06A4                          l105 0684                          l130 06D4  
                        l114 06AE                          l203 079E                          l107 0688  
                        l140 06F0                          l132 06DB                          l116 06B2  
                        l108 0692                          l125 06C5                          l117 06B4  
                        l150 070C                          l143 06F6                          l135 07F1  
                        l127 06C9                          l119 06B8                          l136 06E4  
                        l128 06D0                          l153 0712                          l145 06FA  
                        l129 06CF                          l170 0744                          l162 072F  
                        l146 0700                          l138 06E8                          l171 0745  
                        l139 06F5                          l180 0762                          l164 0733  
                        l156 071E                          l148 0704                          l165 0734  
                        l149 0711                          l182 0766                          l174 0751  
                        l158 0722                          l183 0767                          l159 0723  
                        l192 0784                          l176 0755                          l168 0740  
                        l177 0756                          l194 0788                          l186 0773  
                        l442 05B0                          l195 0789                          l188 0777  
                        l189 0778                          l198 0795                          l455 0549  
                        u710 057D                          u711 057C                          u705 056F  
                        u730 058E                          u810 051E                          u731 058D  
                        u811 051D                          u820 0528                          u900 0630  
                        u725 057E                          u821 0527                          u805 0510  
                        u901 062F                          u750 05A2                          u670 054F  
                        u910 0637                          u751 05A1                          u735 058A  
                        u671 054E                          u911 0636                          u760 05A7  
                        u680 055A                          u840 053B                          u920 063C  
                        u761 05A6                          u745 0596                          u681 0559  
                        u841 053A                          u825 0524                          u921 063B  
                        u690 056B                          u850 0540                          u770 04F6  
                        u930 0644                          u691 056A                          u851 053F  
                        u835 052F                          u771 04F5                          u931 0643  
                        u780 0501                          u940 064B                          u781 0500  
                        u941 064A                          u790 050C                          u950 0650  
                        u791 050B                          u951 064F                          u960 065E  
                        u880 0490                          u865 049A                          u961 065D  
                        u881 048F                          u970 066C                          u890 0627  
                        u875 04E7                          u971 066B                          u891 0626  
                        u980 067A                          u981 0679                          u990 0688  
                        u991 0687                          fsr0 0004                 ___awmod@sign 0076  
               _DS1307_write 061F                         l1101 04F1                         l1111 0501  
                       l1103 04F2                         l1121 051A                         l1113 0506  
                       l1105 04F6                         l1201 067B                         l1051 0439  
                       l1211 06C2                         l1123 051E                         l1115 050C  
                       l1131 053B                         l1107 04FB                         l1203 0689  
                       l1053 043A                         l1141 044D                         l1221 06FD  
                       l1213 06CC                         l1061 054F                         l1133 0540  
                       l1125 0528                         l1117 050F                         l1109 04FD  
                       l1205 0697                         l1055 0444                         l1047 0434  
                       l1151 0494                         l1143 044E                         l1231 0727  
                       l1223 070B                         l1215 06DA                         l1071 0563  
                       l1063 0554                         l1135 0545                         l1127 052E  
                       l1119 0516                         l1207 06A5                         l1049 0438  
                       l1161 04AC                         l1153 0497                         l1145 044F  
                       l1241 073F                         l1233 072B                         l1225 0716  
                       l1217 06E0                         l1081 0579                         l1073 0565  
                       l1065 0556                         l1057 054A                         l1129 0535  
                       l1209 06B3                         l1163 04AF                         l1155 04A1  
                       l1147 0459                         l1139 0449                         l1251 075E  
                       l1243 0749                         l1235 072E                         l1227 071A  
                       l1219 06EF                         l1091 059C                         l1083 057D  
                       l1075 056B                         l1067 055A                         l1059 054B  
                       l1171 04EF                         l1165 04B2                         l1157 04A4  
                       l1149 0492                         l1261 077C                         l1253 0761  
                       l1245 074D                         l1237 0738                         l1229 071D  
                       l1085 058E                         l1077 056E                         l1093 05A2  
                       l1069 055F                         l1181 0486                         l1159 04AA  
                       l1271 0794                         l1263 0780                         l1255 076B  
                       l1247 0750                         l1239 073C                         l1095 05A7  
                       l1087 0594                         l1079 0575                         l1167 04BC  
                       l1191 063D                         l1175 045D                         l1183 048A  
                       l1273 07A1                         l1265 0783                         l1257 076F  
                       l1249 075A                         l1097 05AC                         l1089 0595  
                       l1169 04E4                         l1193 064B                         l1185 0620  
                       l1177 0477                         l1281 05C1                         l1267 078D  
                       l1259 0772                         l1195 0651                         l1187 062A  
                       l1179 0479                         l1291 05DA                         l1283 05C4  
                       l1275 05B1                         l1269 0791                         l1197 065F  
                       l1189 0637                         l1293 05E0                         l1285 05C7  
                       l1277 05BB                         l1199 066D                         l1295 05E8  
                       l1287 05CC                         l1279 05BE                         l1297 0614  
                       l1289 05D2                         STR_1 0009                         STR_2 0010  
                       u1000 0696                         u1001 0695                         u1010 06A4  
                       u1011 06A3                         u1100 06EF                         u1020 06B2  
                       u1101 06EE                         u1021 06B1                         u1110 06F4  
                       u1030 06B8                         u1111 06F3                         u1031 06B7  
                       u1200 0738                         u1120 06FA                         u1040 06C0  
                       u1201 0737                         u1121 06F9                         u1041 06BF  
                       u1210 0744                         u1130 0704                         u1050 06C9  
                       u1211 0743                         u1131 0703                         u1051 06C8  
                       u1300 078D                         u1220 0749                         u1140 070B  
                       u1060 06D4                         u1301 078C                         u1221 0748  
                       u1141 070A                         u1061 06D3                         u1310 0799  
                       u1230 0755                         u1150 0710                         u1070 06DA  
                       u1311 0798                         u1231 0754                         u1151 070F  
                       u1071 06D9                         u1320 079E                         u1240 075A  
                       u1160 0716                         u1080 06DF                         u1321 079D  
                       u1241 0759                         u1161 0715                         u1081 06DE  
                       u1250 0766                         u1170 0722                         u1090 06E8  
                       u1251 0765                         u1171 0721                         u1091 06E7  
                       u1260 076B                         u1180 0727                         u1261 076A  
                       u1181 0726                         u1270 0777                         u1190 0733  
                       u1271 0776                         u1191 0732                         u1280 077C  
                       u1281 077B                         u1337 0604                         u1290 0788  
                       u1291 0787                         u1347 0610                         u1357 0454  
                       u1367 043F                         ___hr 0032                         ___yr 002E  
                       _main 05B1                         btemp 007E                         start 0000  
                lcd_string@i 0076       __end_of_decimal_to_bcd 04F1                        ?_main 0070  
            __end_of___awdiv 05B1              __end_of___awmod 054A              ___awdiv@divisor 0070  
            ___awdiv@counter 0075                        _PORTB 0006                        _PORTD 0008  
                      _TRISB 0086                        _TRISC 0087                        _TRISD 0088  
                      ___day 0031                        ___con 002D                        ___min 007C  
                      ___sec 007D                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 07F2                 __end_of_main 061F  
               _bcd_to_ascii 0491              ?_decimal_to_bcd 0070                       ??_main 002A  
             lcd_command@cmd 0072             ___awdiv@dividend 0072                       _SSPADD 0093  
                     _SSPCON 0014                       _SSPBUF 0013             __end_of_lcd_data 0448  
                     ___date 0030                    ??___awdiv 0074                    ??___awmod 0074  
           ___awdiv@quotient 0077              ___awmod@divisor 0070              ___awmod@counter 0075  
           ??_lcd_initialise 0073                lcd_string@num 0073                lcd_string@str 0075  
    __end_of__initialization 07FC               __pcstackCOMMON 0070                   __pbssBANK0 002D  
              ??_DS1307_read 0077                   __pmaintext 05B1              bcd_to_ascii@bcd 0075  
                  ?_lcd_data 0070                   _lcd_string 0476                   __stringtab 0003  
          bcd_to_ascii@value 0074             ??_decimal_to_bcd 0079          __end_of_DS1307_read 07F2  
   DS1307_read@slave_address 0077                      ___awdiv 054A                      ___awmod 04F1  
                    ___month 002F                      __ptext1 0476                      __ptext2 045D  
                    __ptext3 061F                      __ptext4 04B9                      __ptext5 04F1  
                    __ptext6 054A                      __ptext7 06C1                      __ptext8 0448  
                    __ptext9 0491             ___awmod@dividend 0072          decimal_to_bcd@value 0023  
                 ??_lcd_data 0070         end_of_initialization 07FC             DS1307_write@_day 0026  
                  _PORTBbits 0006                  ?_lcd_string 0073                  _DS1307_read 06C1  
              ??_lcd_command 0070          start_initialization 07F2                ?_DS1307_write 0024  
          decimal_to_bcd@hex 0022            decimal_to_bcd@lsb 0021            decimal_to_bcd@msb 0020  
        __end_of_lcd_command 045D                  __pbssCOMMON 007C                    ___latbits 0002  
              __pcstackBANK0 0020               ??_DS1307_write 007B          DS1307_write@_minute 0024  
        DS1307_write@_second 007B                ?_bcd_to_ascii 0070                     ?___awdiv 0070  
                   ?___awmod 0070                    __pstrings 0003                  _lcd_command 0448  
                   _PIR1bits 000C               ??_bcd_to_ascii 0073                  __stringbase 0008  
               ??_lcd_string 0074                 ?_DS1307_read 0076         __end_of_DS1307_write 06C1  
         __end_of_lcd_string 0491           __end_of__stringtab 0009           DS1307_write@_month 0028  
                   __ptext10 0433                     _lcd_data 0433               _lcd_initialise 045D  
       __end_of_bcd_to_ascii 04B9            DS1307_write@_date 0027            DS1307_write@_hour 0025  
          DS1307_write@_year 0029       __end_of_lcd_initialise 0476                    stringcode 0003  
DS1307_read@register_address 0076                     stringdir 0003                     stringtab 0003  
                _SSPCON2bits 0091              ?_lcd_initialise 0070                 ?_lcd_command 0070  
